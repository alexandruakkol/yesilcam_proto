{"version":3,"sources":["global.js","components/Navbar.js","storage.js","screens/EditProfile.js","components/Header.js","screens/Cards.js","components/Deck.js","screens/CreateAccount.js","screens/CreateAccount2.js","screens/CreateAccount3.js","screens/ForgotPassword.js","screens/Chat.js","screens/Community.js","components/Page.js","context/darkModeContext.js","components/SocialCluster.js","components/ExpandedPost.js","components/Comments.js","screens/Conversation.js","screens/Settings.js","App.js","firebase.js","screens/LoginScreen.js"],"names":["data","GPC","newgpc","console","log","navigation","View","style","styles","navbar","NativeBaseProvider","HStack","justifyContent","onPress","navigate","navButton","w","rounded","shadow","VStack","h","Center","icon","FontAwesome","loginWithGoogleIcon","name","size","color","Ionicons","StyleSheet","create","height","backgroundColor","borderWidth","borderColor","store","obj","key","Object","keys","AsyncStorage","setItem","String","e","retrieve","value","getItem","useFonts","Jost_600SemiBold","fontsLoaded","useReducer","state","action","type","dispatch","useEffect","getAndGlobalizeUsrData","then","GPCl","getGPC","defaultState","firstName","lastName","aboutme","offer","seek","profession","experience","location","languages","profilePicture","useState","tooltipVisib","setTooltipVisib","showImagePicker","ImagePicker","requestMediaLibraryPermissionsAsync","granted","result","launchImageLibraryAsync","resizedPhoto","ImageManipulator","manipulateAsync","uri","resize","width","compress","cancelled","storePicture","alert","StatusBar","page","pageContainer","ScrollView","scrollView","Text","profilePicLabel","TouchableWithoutFeedback","Image","source","profilePic","alt","italic","tapToEdit","vstack","space","Input","input","bg","placeholder","required","defaultValue","disabled","label","TextArea","onChangeText","flexDirection","tooltip","isVisible","content","placement","onClose","touchable","header","paddingTop","borderBottomColor","borderBottomWidth","headerElements","fontWeight","fontSize","headerTitle","marginTop","alignItems","borderRadius","marginLeft","marginBottom","fontFamily","ConditionalDoneButton","props","Button","button","variant","appendUserData","forEach","appendGPC","image","doneText","route","useRoute","LobsterTwo_700Bold_Italic","headerSubTitle","jsonData","arrOfProfilesToShow","setData","myUID","auth","currentUser","uid","getUserData","r","finally","id","push","cards","cardVerticalMargin","verticalSwipe","renderCard","card","prop","photo","nameLabel","MaterialIcons","profileText","speaks","onSwiped","cardIndex","onSwipedAll","onSwipedLeft","onSwipedRight","stackSize","container","flex","show","setShow","show2","setShow2","email","setEmail","password","setPassword","password2","setPassword2","toast","useToast","LinearGradient","colors","start","x","y","end","appView","title","behavior","loginText","mx","toLowerCase","secureTextEntry","InputRightElement","Icon","as","mr","passwordsMatch","emailValid","passwordValid","isActive","description","test","validate","loginButton","LoadingContainer","textAlign","alignContent","paddingLeft","birthday","setBirthday","isDatePickerVisible","setDatePickerVisibility","dateOptions","year","month","day","question","alignSelf","bdayBox","bdayText","toLocaleDateString","mode","onConfirm","date","onCancel","isDarkModeEnabled","today","Date","age","getFullYear","m","getMonth","getDate","getAge","validateBirthday","params","confirmTxt","setFirstName","setLastName","submitAccountStatus","setSubmitAccountStatus","userData","btn","createUser","setTimeout","btnText","submitStatus","marginHorizontal","recoveryEmail","setRecoveryEmail","myData","setMyData","pageStatus","setPageStatus","setGPCl","getUserDataByID","chats","convoKey","getChatData","chatData","val","members","member","usrData_id","otherPerson","theirData","noMessagesText","map","convo","chatteeImg","slice","Avatar","from","lastText","lastMessage","convserationSlice","view","paddingVertical","showModal","setShowModal","postType","setPostType","postData","setPostData","refresh","setRefresh","payload","eventName","eventTime","details","Modal","isOpen","avoidKeyboard","bottom","modal","Content","Header","ml","mt","selectorText","Divider","thickness","orientation","colorScheme","newPost","body","user","comments","commentCount","handlePost","Body","FormControl","multiline","Footer","Fab","renderInPortal","AntDesign","children","useContext","DarkModeContext","DarkModeProvider","dark","light","darkMode","setDarkMode","Provider","toggleDarkMode","createContext","SocialPost","actionsheetIsOpen","setActionSheetIsOpen","onActionsheetClose","onActionsheetOpen","showCommentModal","setShowCommentModal","postWrapper","socialPost","picture","marginRight","time","dayjs","fromNow","Entypo","Actionsheet","Box","px","Item","FontAwesome5","eventPost","eventDetails","eventTitle","detailsText","setDetails","dataReady","setDataReady","extend","relativeTime","getCollection","colData","post","usrData","values","toDate","profilePicSize","newComment","setNewComment","CloseButton","format","mb","postProps","myCommPic","usrData_profilePicture","match","createComment","postComment","Intl","NumberFormat","notation","comCount","results","getComments","length","comment","renderItem","item","paddingBottom","chatteePic","setMyPic","message","setMessage","getRealtimeMessages","messageKey","pic","myMsgStack","otherMsgStack","chatHStack","display","messageBox","messageText","marginVertical","newRealtimeMessage","sendMessage","logoutBtn","signOut","catch","error","logout","NavigationContainer","Stack","Navigator","Screen","options","headerShown","component","LoginScreen","Settings","Chat","Cards","Conversation","EditProfile","Community","Navbar","CreateAccount","CreateAccount2","ForgotPassword","CreateAccount3","createNativeStackNavigator","LogBox","ignoreAllLogs","withPerson","convoID","messagesRef","storageRef","realtimeDb","q","realtimeQuery","onValue","snapshot","child","sort","a","b","seconds","updateRealtime","uuidv4","firebase","firestore","Timestamp","fromDate","updateLastMessage","swipedRightOn","getRightSwipes","mySwipes","set","matchCheck","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bundleId","app","response","createUserWithEmailAndPassword","userCredential","writeUserDataAtCreation","code","firestoreDb","getFirestore","usersRef","collection","getDocs","doc","docRef","docSnap","getDoc","exists","postID","func","commentRef","increment","updateDoc","FieldValue","newId","setDoc","merge","changeProfilePic","newURL","ppicRef","blobDb","getStorage","Platform","OS","replace","ref","uploadString","usrData_image","getDownloadURL","downloadURL","rf","query","where","snap","newGPC","setGPC","k","col","postsRef","orderBy","limit","el","commentsRef","postRef","getDatabase","chatsRef","realtimeGet","updates","ofPerson","rightSwipesRef","theirSwipes","includes","clear","onAuthStateChanged","handleLogin","signInWithEmailAndPassword","userCredentials","loginpage","subtitle1","subtitle2","forgotPass","handleLogInWithEmailAndPassword","lineContainer","line","lineText","startIcon","loginWithAppleButton","loginWithAppleText","loginWithGoogleButton","onGoogleButtonPress","loginWithGoogleText","newHere","createAccountText","padding","textDecorationLine","paddingHorizontal","flexWrap"],"mappings":"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","file":"static/js/app.2b82ab73.chunk.js","sourcesContent":["var GPC = {};\nexport function setGPC(newgpc) {\n  GPC = newgpc;\n  console.log(\"set\", GPC);\n}\nexport function getGPC() {\n  return GPC;\n}\nexport function appendGPC(data) {\n  GPC = { ...GPC, ...data };\n}\n","import { StyleSheet, TouchableWithoutFeedback } from \"react-native\";\nimport React from \"react\";\nimport { NativeBaseProvider, Center, HStack, View, VStack } from \"native-base\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\n\nconst Navbar = ({ navigation }) => {\n  return (\n    <View style={styles.navbar}>\n      <NativeBaseProvider>\n        <HStack justifyContent=\"center\">\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"EditProfile\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"user-o\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Chat\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <Ionicons style={styles.loginWithGoogleIcon} name=\"ios-chatbox-outline\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Cards\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"bars\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Community\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"users\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Settings\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"gear\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n        </HStack>\n      </NativeBaseProvider>\n    </View>\n  );\n};\n\nexport default Navbar;\n\nconst styles = StyleSheet.create({\n  navbar: {\n    height: \"7.5%\",\n    backgroundColor: \"white\",\n  },\n  navButton: {\n    height: \"600%\",\n    borderWidth: \"0.4\",\n    borderColor:'lightgrey'\n  },\n});\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const store = async (obj) => {\n  try {\n    for (key of Object.keys(obj)) {\n      await AsyncStorage.setItem(String(key), String(obj[key]));\n      console.log(\"stored \", String(key), String(obj[key]));\n    }\n  } catch (e) {\n    console.log(\"asyncstorage write error\", e);\n  }\n};\n\nexport const retrieve = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value != null ? value : null;\n  } catch (e) {\n    console.log(\"asyncstorage read error\", e);\n  }\n};\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StyleSheet } from \"react-native\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport {\n  NativeBaseProvider,\n  Center,\n  TextArea,\n  VStack,\n  Image,\n  HStack,\n  Button,\n  Text,\n  View,\n  ScrollView,\n  StatusBar,\n  Input,\n} from \"native-base\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport Tooltip from \"react-native-walkthrough-tooltip\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { store, retrieve } from \"../storage\";\nimport Header from \"../components/Header\";\nimport {\n  appendUserData,\n  storePicture,\n  getPictureOfUser,\n  auth,\n  getAndGlobalizeUsrData,\n} from \"../firebase\";\nimport Navbar from \"../components/Navbar\";\nimport { getGPC } from \"../global\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\n\nconst profilePicSize = 200;\nconst headerColor = \"#ffffff\";\nconst bkgColor = \"#ebecf0\";\nconst inputColor = \"white\";\n\nconst ProfileSetup = ({ navigation }) => {\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n  });\n\n  function reduce(state, action) {\n    if (action.type === \"init\") return action.value;\n    return { ...state, [action.type]: action.value };\n  }\n\n  const [state, dispatch] = useReducer(reduce, {});\n\n  useEffect(() => {\n    getAndGlobalizeUsrData().then(() => {\n      GPCl = getGPC();\n      let defaultState = {\n        firstName: GPCl[\"usrData_firstName\"] ? GPCl[\"usrData_firstName\"] : \"\",\n        lastName: GPCl[\"usrData_lastName\"] ? GPCl[\"usrData_lastName\"] : \"\",\n        aboutme: GPCl[\"usrData_aboutme\"] ? GPCl[\"usrData_aboutme\"] : \"\",\n        offer: GPCl[\"usrData_offer\"] ? GPCl[\"usrData_offer\"] : null,\n        seek: GPCl[\"usrData_seek\"] ? GPCl[\"usrData_seek\"] : null,\n        profession: GPCl[\"usrData_profession\"]\n          ? GPCl[\"usrData_profession\"]\n          : null,\n        experience: GPCl[\"usrData_experience\"]\n          ? GPCl[\"usrData_experience\"]\n          : null,\n        location: GPCl[\"usrData_location\"] ? GPCl[\"usrData_location\"] : null,\n        languages: GPCl[\"usrData_languages\"] ? GPCl[\"usrData_languages\"] : null,\n        profilePicture: GPCl[\"usrData_profilePicture\"]\n          ? GPCl[\"usrData_profilePicture\"]\n          : \"https://cdn-icons-png.flaticon.com/512/875/875068.png\",\n      };\n      const action = {\n        type: \"init\",\n        value: defaultState,\n      };\n      dispatch(action);\n    });\n  }, []);\n\n  let [tooltipVisib, setTooltipVisib] = useState(false);\n\n  const showImagePicker = async () => {\n    // Ask the user for the permission to access the media library\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"You've refused to allow this app to access your photos!\");\n      return;\n    }\n    const result = await ImagePicker.launchImageLibraryAsync();\n    const resizedPhoto = await ImageManipulator.manipulateAsync(\n      result.uri,\n      [{ resize: { width: 250 } }],\n      { compress: 0.9 }\n    );\n    if (!result.cancelled) {\n      const action = {\n        type: \"profilePicture\",\n        value: resizedPhoto.uri,\n      };\n      dispatch(action);\n      storePicture(resizedPhoto.uri);\n      return;\n    } else {\n      return;\n    }\n  };\n\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <NativeBaseProvider>\n        <StatusBar></StatusBar>\n        <Header\n          page=\"editProfile\"\n          data={state}\n          navigation={navigation}\n        ></Header>\n        <View style={styles.pageContainer}>\n          <ScrollView>\n            <View style={styles.scrollView}>\n              <Text style={styles.profilePicLabel}>My Photo</Text>\n              <TouchableWithoutFeedback onPress={() => showImagePicker()}>\n                <Image\n                  source={{ uri: state.profilePicture }}\n                  style={styles.profilePic}\n                  alt=\"Profile picture\"\n                ></Image>\n              </TouchableWithoutFeedback>\n              <Text italic style={styles.tapToEdit}>\n                Tap to edit\n              </Text>\n\n              <VStack style={styles.vstack} space={5}>\n                <HStack>\n                  <Input\n                    style={styles.input}\n                    bg={inputColor}\n                    w=\"50%\"\n                    h=\"12\"\n                    placeholder=\"First name\"\n                    required\n                    defaultValue={state.firstName}\n                    disabled\n                  ></Input>\n                  <Input\n                    style={styles.input}\n                    bg={inputColor}\n                    w=\"50%\"\n                    placeholder=\"Last name\"\n                    defaultValue={state.lastName}\n                    required\n                    disabled\n                  ></Input>\n                </HStack>\n\n                <View>\n                  <Text style={styles.label}>About Me</Text>\n                </View>\n\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\"Tell us a few words about yourself:\n                            • What are your passions, interests and aspirations?\n                            • How do you go about achieveing your goals?\"\n                  required\n                  defaultValue={state.aboutme}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"aboutme\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <Text style={styles.label}>What I offer</Text>\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\" • What skills/experience do you want to share with others?\n              • What resources, services, or materials are you able to offer?\n               \"\n                  defaultValue={state.offer}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"offer\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <Text style={styles.label}>What I seek (optional) </Text>\n                  <View style={styles.tooltip}>\n                    <Tooltip\n                      isVisible={tooltipVisib}\n                      content={\n                        <Text>\n                          At GPF, we know how difficult it is to make an\n                          independent film and we strive to connect Film and TV\n                          professionals who can offer assistance without\n                          necessarily expecting a return. Hence this field is\n                          entirely optional\n                        </Text>\n                      }\n                      placement=\"top\"\n                      onClose={() => setTooltipVisib(false)}\n                    >\n                      <TouchableWithoutFeedback\n                        style={styles.touchable}\n                        onPress={() => setTooltipVisib(true)}\n                      >\n                        <FontAwesome\n                          name=\"question-circle\"\n                          size={20}\n                        ></FontAwesome>\n                      </TouchableWithoutFeedback>\n                    </Tooltip>\n                  </View>\n                </View>\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\" • What do you seek by using this app?\n              • What sort of project are you looking for help for?\"\n                  defaultValue={state.seek}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"seek\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <Text style={styles.label}>Profession</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"Add profession\"\n                  defaultValue={state.profession}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"profession\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n                <Text style={styles.label}>Years of experience</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  w=\"15%\"\n                  placeholder=\"ex.2\"\n                  defaultValue={state.experience}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"experience\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n\n                <Text style={styles.label}>Located in</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"ex. San Diego, CA\"\n                  defaultValue={state.location}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"location\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n\n                <Text style={styles.label}>Languages I speak</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"Add language\"\n                  defaultValue={state.languages}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"languages\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n                <View h=\"10\"></View>\n              </VStack>\n            </View>\n          </ScrollView>\n          <Navbar navigation={navigation}></Navbar>\n        </View>\n      </NativeBaseProvider>\n    );\n  }\n};\n\nexport default ProfileSetup;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"100%\",\n  },\n\n  header: {\n    paddingTop: 50,\n    backgroundColor: headerColor,\n    height: 100,\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1,\n  },\n\n  headerElements: { fontWeight: \"bold\", fontSize: 17 },\n  headerTitle: { fontSize: 18 },\n\n  scrollView: {\n    marginTop: 15,\n    alignItems: \"center\",\n  },\n\n  profilePic: {\n    marginTop: 10,\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 3.5,\n    borderColor: \"lightgray\",\n    borderWidth: 1,\n  },\n\n  profilePicLabel: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n  },\n  tooltip: {},\n\n  tapToEdit: {\n    fontSize: 12,\n  },\n\n  vstack: {\n    marginTop: 30,\n  },\n\n  label: {\n    marginLeft: 20,\n    fontSize: 17,\n    marginBottom: -13,\n    fontWeight: \"bold\",\n  },\n\n  input: {\n    fontFamily: \"Jost_600SemiBold\",\n    fontSize: 17,\n    width: \"100%\",\n  },\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport React from \"react\";\nimport { Center, HStack, View, Button } from \"native-base\";\nimport { useFonts, LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { appendUserData, storePicture } from \"../firebase\";\nimport { appendGPC } from \"../global\";\nconst headerColor = \"white\";\n\n//for EditProfile submit\nconst ConditionalDoneButton = (props) => {\n  if (props.page != \"editProfile\") return <View></View>;\n  return (\n    <Button\n      style={styles.button} variant=\"link\" bg={headerColor} h=\"10\" w=\"25%\"\n      onPress={() => {\n        //write to db\n        appendUserData(props.data).then(props.navigation.navigate(\"Cards\"));\n        Object.keys(props.data).forEach((key) => appendGPC({ [\"usrData_\" + key]: props.data[key] }));\n        if (props.data.image) storePicture(props.data.image);\n      }}>\n      <Text style={[styles.doneText, styles.headerElements]}>Save</Text>\n    </Button>\n  );\n};\n\nconst Header = (props) => {\n  const route = useRoute();\n  let [fontsLoaded] = useFonts({LobsterTwo_700Bold_Italic});\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <HStack style={styles.header} space={12} justifyContent=\"center\">\n        <Center h=\"10\" w=\"70%\">\n          <Text style={[styles.headerTitle, styles.headerElements]}>\n            Green Pine Connects\n          </Text>\n          <Text style={[styles.headerSubTitle, styles.headerElements]}>\n            {route.name === \"Cards\" ? \"\" : route.name}\n          </Text>\n          <ConditionalDoneButton\n            page={props.page} data={props.data} navigation={props.navigation}\n          ></ConditionalDoneButton>\n        </Center>\n      </HStack>\n    );\n  }\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    paddingTop: 50,\n    backgroundColor: headerColor,\n    height: 110,\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1,\n  },\n  headerElements: { fontWeight: \"bold\" },\n  headerTitle: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 25,\n    color: \"darkgreen\",\n  },\n  headerSubTitle: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 17,\n    color: \"darkgreen\",\n  },\n  button: {\n    marginTop: -40,\n    marginLeft: 310,\n  },\n  doneText: {\n    color: \"darkgreen\",\n    fontSize: 18,\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n  },\n});\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport { NativeBaseProvider, Center, HStack, View } from \"native-base\";\nimport React from \"react\";\nimport Deck from \"../components/Deck\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Cards = ({ navigation }) => {\n  return (\n    <NativeBaseProvider>\n      <View style={styles.pageContainer}>\n        <Header></Header>\n        <Deck></Deck>\n      </View>\n      <Navbar navigation={navigation}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Cards;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Swiper from \"react-native-deck-swiper\";\nimport { NativeBaseProvider, Image, View, VStack } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { getUserData, swipeRight, getRightSwipes, auth } from \"../firebase\";\n\nconst profilePicSize = 250;\nlet arrOfProfilesToShow = [];\nlet jsonData;\nconst Deck = () => {\n  const [data, setData] = useState();\n  const myUID = auth.currentUser.uid;\n  useEffect(() => {\n    arrOfProfilesToShow = [];\n    getUserData().then((r) => jsonData = r)\n      .finally(() => {\n        //convert object of objects to array of objects (cards accept arrays only)\n        Object.keys(jsonData).forEach((key) => { if (jsonData[key].id != myUID) arrOfProfilesToShow.push(jsonData[key]) });\n        console.log(\"profiles:\", arrOfProfilesToShow);\n        setData(arrOfProfilesToShow);\n      });\n  }, [auth]);\n\n  console.log(\"showing the following cards: \", arrOfProfilesToShow);\n\n  let [fontsLoaded] = useFonts({ LobsterTwo_700Bold_Italic, Jost_600SemiBold });\n\n  if (!fontsLoaded || !data) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <View>\n        <Swiper\n          cards={arrOfProfilesToShow}\n          cardVerticalMargin={2}\n          verticalSwipe={false}\n          renderCard={(card) => {\n            console.log(card);\n            let prop = card;\n            return (\n              <NativeBaseProvider>\n                <View style={styles.card}>\n                  <Image source={{ uri: prop.photo }} style={styles.profilePic} alt=\"Profile picture\" ></Image>\n                  <Text style={styles.nameLabel}>\n                    {prop.firstName} {prop.lastName}\n                  </Text>\n                  <Text style={styles.location}>\n                    <MaterialIcons name=\"location-pin\" size={16} color=\"black\"/>\n                    {prop.location}\n                  </Text>\n                  <VStack marginLeft=\"2\" space={2}>\n                    <Text style={styles.label}>About</Text>\n                    <Text style={styles.profileText}>{prop.aboutme}</Text>\n                    {prop.offer ?( \n                      <>\n                        <Text style={styles.label}>Offering</Text>\n                        <Text style={styles.profileText}>{prop.offer}</Text>\n                      </>) : (<></>)\n                    }\n                    {prop.seek ? (\n                      <>\n                        <Text style={styles.label}>Seeking</Text>\n                        <Text style={styles.profileText}>{prop.seek}</Text>\n                      </>) : (<></>)\n                    }\n                    <Text style={styles.label}>Profession</Text>\n                    <Text style={styles.profileText}>\n                      {prop.profession}, {prop.experience} years\n                    </Text>\n                    <Text style={styles.speaks}>Speaks: {prop.languages}</Text>\n                  </VStack>\n                </View>\n              </NativeBaseProvider>\n            );\n          }}\n          onSwiped={(cardIndex) => {}}\n          onSwipedAll={() => {\n            console.log(\"onSwipedAll\");\n          }}\n          onSwipedLeft={(cardIndex) => {\n            console.log(\"Swiped NO on\", arrOfProfilesToShow[cardIndex]);\n          }}\n          onSwipedRight={(cardIndex) => {\n            console.log(\"swiped right on\", arrOfProfilesToShow[cardIndex].id);\n            //swipeRight(arrOfProfilesToShow[cardIndex].id);\n          }}\n          cardIndex={0}\n          backgroundColor={\"#4FD0E9\"}\n          stackSize={3}\n        ></Swiper>\n      </View>\n    );\n  }\n};\n\nexport default Deck;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5FCFF\",\n  },\n\n  card: {\n    height: \"84%\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#E8E8E8\",\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n  },\n\n  profilePic: {\n    marginTop: 5,\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 3.5,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 12,\n  },\n\n  location: {\n    fontSize: 15,\n    marginTop: 5,\n  },\n\n  nameLabel: {\n    fontSize: 23,\n    fontWeight: \"bold\",\n    fontFamily: \"Jost_600SemiBold\",\n  },\n\n  label: { fontSize: 16, fontWeight: \"bold\", width: \"100%\" },\n  speaks: { fontSize: 16, width: \"100%\" },\n  profileText: { fontSize: 15 },\n});\n","import {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport {\n  NativeBaseProvider,\n  Input,\n  Button,\n  Icon,\n  Center,\n  useToast,\n} from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { store, retrieve } from \"../storage\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount = ({ navigation }) => {\n  let [show, setShow] = useState(true);\n  let [show2, setShow2] = useState(true);\n  let [email, setEmail] = useState();\n  let [password, setPassword] = useState();\n  let [password2, setPassword2] = useState();\n  const toast = useToast();\n\n  function validate() {\n    let passwordsMatch = false,\n      emailValid = false,\n      passwordValid = false;\n    const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    //Minimum eight characters, at least one letter and one number\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const id = \"toastID\";\n\n    if (password === password2) passwordsMatch = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({ id, description: \"Passwords do not match\" });\n      console.log(\"input passwords do not match\");\n    }\n    if (emailRegex.test(email)) emailValid = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({ id, description: \"Email is not valid\" });\n      console.log(\"input email is not valid\");\n    }\n\n    if (passwordRegex.test(password)) passwordValid = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({\n          id,\n          description:\n            \"Password does not contain minimum eight characters, at least one letter and one number\",\n        });\n      console.log(\"input password is invalid\");\n    }\n    if (passwordsMatch && emailValid && passwordValid) return true;\n  }\n\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={{height:'100%'}}\n        >\n          <View style={styles.appView}>\n            <Text style={styles.title}>Green Pine Connects</Text>\n\n            <KeyboardAvoidingView behavior=\"padding\">\n              <Text style={styles.loginText}>Sign up</Text>\n\n              <Input\n                style={styles.input}\n                variant=\"underlined\"\n                size=\"2xl\"\n                mx=\"4\"\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={(email) => {\n                  setEmail(email.toLowerCase());\n                }}\n              ></Input>\n\n              <Input\n                secureTextEntry={show}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                value={password}\n                onChangeText={(password) => {\n                  setPassword(password);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow(!show);\n                    }}\n                  />\n                }\n                placeholder=\"Password\"\n              ></Input>\n\n              <Input\n                secureTextEntry={show2}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                value={password2}\n                onChangeText={(password2) => {\n                  setPassword2(password2);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show2 ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow2(!show2);\n                    }}\n                  />\n                }\n                placeholder=\"Retype password\"\n              ></Input>\n\n              <Center>\n                <Button\n                  bg=\"red.800\"\n                  w=\"190\"\n                  h=\"10\"\n                  borderRadius=\"20\"\n                  onPress={() => {\n                    if (validate()) {\n                      navigation.navigate(\"CreateAccount2\", {\n                        email: email,\n                        password: password,\n                      });\n                    }\n                  }}\n                >\n                  <Text style={styles.loginButton}>Confirm</Text>\n                </Button>\n              </Center>\n            </KeyboardAvoidingView>\n          </View>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n};\n\nexport default CreateAccount;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  loginButton: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","//Birthday input screen\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport {\n  NativeBaseProvider,\n  Input,\n  Button,\n  Icon,\n  Center,\n  Box,\n  useToast,\n} from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { store, retrieve } from \"../storage\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount2 = ({ route, navigation }) => {\n  let [show, setShow] = useState(true);\n  let [show2, setShow2] = useState(true);\n  const [birthday, setBirthday] = useState();\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const toast = useToast();\n\n  var dateOptions = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n\n  function validateBirthday() {\n    if (!birthday) return;\n    function getAge(date) {\n      var today = new Date();\n      var age = today.getFullYear() - date.getFullYear();\n      var m = today.getMonth() - date.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < date.getDate())) {\n        age--;\n      }\n      return age;\n    }\n\n    const id = \"toastID\";\n    if (getAge(birthday) < 18) {\n      if (!toast.isActive(id))\n        toast.show({\n          id,\n          description:\n            \"You need to be at least 18 years old to make an account.\",\n        });\n      return false;\n    } else return true;\n  }\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={{height:'100%'}}\n        >\n          <View style={styles.appView}>\n            <Text style={styles.title}>Green Pine Connects</Text>\n\n            <KeyboardAvoidingView behavior=\"padding\">\n              <Center>\n                <Text style={styles.question}>What is your birthday?</Text>\n              </Center>\n              <TouchableWithoutFeedback\n                onPress={() => {\n                  setDatePickerVisibility(true);\n                }}\n              >\n                <Center> \n                  <View\n                    alignSelf=\"center\"\n                    bg=\"primary.500\"\n                    style={styles.bdayBox}\n                    >\n                      <Center>\n                        <Text style={styles.bdayText}>\n                          {birthday\n                            ? birthday.toLocaleDateString(\"en-US\", dateOptions)\n                            : \"Choose your birthday\"}\n                        </Text>\n                      </Center>\n                  </View>\n                </Center>\n\n              </TouchableWithoutFeedback>\n\n              <DateTimePickerModal\n                isVisible={isDatePickerVisible}\n                mode=\"date\"\n                onConfirm={(date) => {\n                  setBirthday(date);\n                  setDatePickerVisibility(false);\n                }}\n                onCancel={() => {\n                  setDatePickerVisibility(false);\n                }}\n                isDarkModeEnabled={true}\n              />\n              <Center>\n                <Button\n                  bg=\"red.800\"\n                  w=\"230\"\n                  h=\"10\"\n                  borderRadius=\"20\"\n                  onPress={() => {\n                    if (validateBirthday())\n                      navigation.navigate(\"CreateAccount3\", {\n                        email: route.params.email,\n                        password: route.params.password,\n                        birthday: birthday.toLocaleDateString(\n                          \"en-US\",\n                          dateOptions\n                        ),\n                      });\n                  }}\n                >\n                  <Text style={styles.confirmTxt}>Confirm</Text>\n                </Button>\n              </Center>\n            </KeyboardAvoidingView>\n          </View>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n};\n\nexport default CreateAccount2;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  question: {\n    paddingTop: 40,\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  bdayBox: {\n    marginTop: 30,\n    height: 45,\n    width: 400,\n    backgroundColor: \"lightgrey\",\n    borderRadius: 12,\n    marginBottom: 80,\n  },\n  bdayText: {\n\n    fontSize: 35,\n  },\n  confirmTxt: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","//import AsyncStorage from '@react-native-community/async-storage';\nimport { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { store, retrieve } from \"../storage\";\nimport { auth, createUser } from \"../firebase\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount3 = ({ route, navigation }) => {\n  let [firstName, setFirstName] = useState();\n  let [lastName, setLastName] = useState();\n  let [submitAccountStatus, setSubmitAccountStatus] = useState();\n\n  let userData = {\n    email: route.params.email,\n    firstName,\n    lastName,\n    birthday: route.params.birthday,\n    photo:\n      \"https://firebasestorage.googleapis.com/v0/b/greenpineconnects.appspot.com/o/def.png?alt=media&token=dfefab79-7b79-4988-8967-616a63ccdfec\",\n  };\n\n  return (\n    <NativeBaseProvider>\n      <LinearGradient\n        // Background Linear Gradient\n        colors={[\"#c4791c\", \"#0c5407\"]}\n        start={{ x: 1.75, y: 0.75 }}\n        end={{ x: 0.5, y: 0.98 }}\n        style={{height:'100%'}}\n      >\n        <View style={styles.appView}>\n          <Text style={styles.title}>Green Pine Connects</Text>\n\n          <KeyboardAvoidingView behavior=\"padding\">\n            <Text style={styles.loginText}>Enter your name and surname</Text>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"First name\"\n              value={firstName}\n              onChangeText={(firstName) => {\n                setFirstName(firstName);\n              }}\n            ></Input>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"Last name\"\n              value={lastName}\n              onChangeText={(lastName) => {\n                setLastName(lastName);\n              }}\n            ></Input>\n\n            <Center>\n              <Button\n                style={styles.btn}\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                  console.log(route.params.email, route.params.password);\n                  createUser(\n                    route.params.email,\n                    route.params.password,\n                    userData\n                  ).then((r) => {\n                    if (!r) {\n                      setSubmitAccountStatus(\"Your account has been created.\");\n                      setTimeout(() => navigation.navigate(\"EditProfile\"), 750);\n                    }\n                    if (r === \"auth/email-already-in-use\") {\n                      setSubmitAccountStatus(\n                        \"The email address is already in use by another account\"\n                      );\n                    }\n                  });\n                  //navigation.navigate(\"CreateAccount2\");\n                }}\n              >\n                <Text style={styles.btnText}>Create Account</Text>\n              </Button>\n            </Center>\n            <Center>\n              <Text style={styles.submitStatus}>{submitAccountStatus}</Text>\n            </Center>\n          </KeyboardAvoidingView>\n        </View>\n      </LinearGradient>\n    </NativeBaseProvider>\n  );\n};\n\nexport default CreateAccount3;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  input: {\n    height: 60,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  btn: {\n    marginTop: 100,\n  },\n  btnText: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n  submitStatus: {\n    marginTop: 30,\n    fontFamily: \"Jost_600SemiBold\",\n    fontSize: 20,\n    marginHorizontal: 5,\n    textAlign: \"center\",\n    color: textColor,\n  },\n});\n","//import AsyncStorage from '@react-native-community/async-storage';\nimport { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst textColor = \"#dae8d4c9\";\nconst ForgotPassword = ({ navigation }) => {\n  let [recoveryEmail, setRecoveryEmail] = useState();\n\n  return (\n    <NativeBaseProvider>\n      <LinearGradient\n        // Background Linear Gradient\n        colors={[\"#c4791c\", \"#0c5407\"]}\n        start={{ x: 1.75, y: 0.75 }}\n        end={{ x: 0.5, y: 0.98 }}\n        style={{height:'100%'}}\n      >\n        <View style={styles.appView}>\n          <Text style={styles.title}>Green Pine Connects</Text>\n\n          <KeyboardAvoidingView behavior=\"padding\">\n            <Text style={styles.loginText}>What is your account's email?</Text>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"Email\"\n              value={recoveryEmail}\n              onChangeText={(recoveryEmail) => {\n                setRecoveryEmail(recoveryEmail);\n              }}\n            ></Input>\n\n            <Center>\n              <Button\n                style={styles.btn}\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                    \n                  \n                }}\n              >\n                <Text style={styles.btnText}>Confirm</Text>\n              </Button>\n            </Center>\n          </KeyboardAvoidingView>\n        </View>\n      </LinearGradient>\n    </NativeBaseProvider>\n  );\n};\n\nexport default ForgotPassword;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  input: {\n    height: 60,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  btn: {\n    marginTop: 100,\n  },\n  btnText: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Center,\n  View,\n  Image,\n  Avatar,\n  HStack,\n  VStack,\n} from \"native-base\";\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { auth, getUserDataByID, getChatData } from \"../firebase\";\nimport { set } from \"firebase/database\";\nimport {\n  useFonts,\n  LobsterTwo_700Bold_Italic,\n} from \"@expo-google-fonts/lobster-two\";\nimport { getGPC } from \"../global\";\nconst bkgColor = \"#ebecf0\";\n\nconst Chat = ({ navigation }) => {\n  const [myData, setMyData] = useState([]);\n  const [pageStatus, setPageStatus] = useState(\"loading\");\n  const [GPCl, setGPCl] = useState({});\n  let [fontsLoaded] = useFonts({\n    LobsterTwo_700Bold_Italic,\n  });\n\n  useEffect(() => {\n    setGPCl(getGPC());\n    getUserDataByID(auth.currentUser.uid).then((r) => {\n      if (!r.chats) {\n        setPageStatus(\"noData\");\n        return;\n      }\n      Object.keys(r.chats).forEach((convoKey) => {\n        console.log(\"CONVO\", convoKey);\n        getChatData(convoKey).then((chatData) => {\n          chatData = chatData.val();\n          Object.keys(chatData.members).forEach((member) => {\n            if (member === GPCl.usrData_id) return;\n            chatData.otherPerson = member;\n          });\n          getUserDataByID(chatData.otherPerson).then((theirData) => {\n            // join user and chat dimensions\n            setMyData((myData) => [\n              ...myData,\n              { ...chatData, ...theirData, convoKey },\n            ]);\n          });\n        });\n      });\n      setPageStatus(\"ready\");\n    });\n  }, []);\n\n  if (pageStatus === \"loading\") return <Text>Loading...</Text>;\n  if (pageStatus === \"noData\") {\n    if (!fontsLoaded) {\n      return (\n        <View>\n          <Text>Loading...</Text>\n        </View>\n      );\n    } else\n      return (\n        <>\n          <View style={styles.pageContainer}>\n            <Header />\n            <View flex={1} justifyContent=\"center\">\n              <Center>\n                <Text style={styles.noMessagesText}>No messages</Text>\n              </Center>\n            </View>\n          </View>\n          <Navbar navigation={navigation}></Navbar>\n        </>\n      );\n  }\n  if (pageStatus === \"ready\")\n    return (\n      <NativeBaseProvider>\n        <View style={styles.pageContainer}>\n          <Header />\n          {myData.map((convo) => {\n            return (\n              <TouchableWithoutFeedback\n                key={convo.otherPerson}\n                onPress={() =>\n                  navigation.navigate(\"Conversation\", {\n                    convo: convo.convoKey,\n                    chatteeImg: convo.photo,\n                  })\n                }\n              >\n                <HStack style={styles.slice} space={2}>\n                  <Avatar\n                    style={styles.chatteeImg}\n                    size=\"lg\"\n                    source={{\n                      uri: convo.photo,\n                    }}\n                  ></Avatar>\n                  <View>\n                    <VStack space={2}>\n                      <Text style={styles.from}>\n                        {convo.firstName} {convo.lastName}\n                      </Text>\n                      <Text style={styles.lastText}>{convo.lastMessage}</Text>\n                    </VStack>\n                  </View>\n                </HStack>\n              </TouchableWithoutFeedback>\n            );\n          })}\n        </View>\n        <Navbar navigation={navigation}></Navbar>\n      </NativeBaseProvider>\n    );\n};\n\nexport default Chat;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n\n  convserationSlice: {\n    view: {},\n  },\n  slice: {\n    marginLeft: 5,\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n  },\n  noMessagesText: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 28,\n    color: \"darkgreen\",\n  },\n  from: { fontWeight: \"bold\", fontSize: 17 },\n  lastText: { fontSize: 14 },\n});\n","import {\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Center,\n  View,\n  Fab,\n  Icon,\n  Modal,\n  FormControl,\n  Input,\n  Button,\n  Divider,\n  HStack,\n} from \"native-base\";\nimport { useState, useReducer } from \"react\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Page from \"../components/Page\";\nimport Header from \"../components/Header\";\nimport SocialCluster from \"../components/SocialCluster\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { newPost } from \"../firebase\";\nimport { getGPC } from \"../global\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Community = ({ navigation }) => {\n  const defaultState = {\n    eventName: \"\",\n    location: \"\",\n    eventTime: \"\",\n    details: \"\",\n  };\n  const [showModal, setShowModal] = useState(false);\n  const [postType, setPostType] = useState(\"socialPost\");\n  const [postData, setPostData] = useState();\n  const [refresh, setRefresh] = useState();\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  function reducer(state, action) {\n    state = {\n      ...state,\n      ...action.payload,\n    };\n    return state;\n  }\n\n  function handlePost() {\n    GPCl = getGPC();\n    //write socialPost\n    if (postType == \"socialPost\") {\n      newPost({\n        type: \"socialPost\",\n        body: postData,\n        user: GPCl.usrData_id,\n        comments: {},\n        commentCount: 0,\n      });\n      setPostData(\"\");\n      setRefresh(!refresh);\n      return;\n    }\n    //else, write event post\n    newPost({\n      type: \"event\",\n      user: GPCl.usrData_id,\n      comments: {},\n      commentCount: 0,\n      ...state,\n    });\n    setPostData(\"\");\n    return;\n  }\n  return (\n    <NativeBaseProvider>\n      <Page>\n        <Header style={styles.header}></Header>\n        <SocialCluster refresh={refresh}></SocialCluster>\n\n        <Modal\n          isOpen={showModal}\n          onClose={() => setShowModal(false)}\n          avoidKeyboard\n          justifyContent=\"flex-end\"\n          bottom=\"4\"\n          size=\"full\"\n          style={styles.modal}\n        >\n          <Modal.Content h=\"80%\">\n            <Modal.Header>\n              <Center>\n                <HStack>\n                  <View ml=\"10%\" mt={2}>\n                    <TouchableWithoutFeedback\n                      onPress={() => setPostType(\"socialPost\")}\n                    >\n                      <Text style={styles.selectorText}>Social Post</Text>\n                    </TouchableWithoutFeedback>\n                  </View>\n                  <Divider\n                    bg=\"grey\"\n                    thickness=\"2\"\n                    mx=\"2\"\n                    orientation=\"vertical\"\n                  />\n                  <View mt={2} mr={-8}>\n                    <TouchableWithoutFeedback\n                      onPress={() => setPostType(\"event\")}\n                    >\n                      <Text style={styles.selectorText}>Event</Text>\n                    </TouchableWithoutFeedback>\n                  </View>\n\n                  <Button\n                    ml=\"30%\"\n                    variant=\"ghost\"\n                    colorScheme=\"blueGray\"\n                    onPress={() => {\n                      setShowModal(false);\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    mr=\"10%\"\n                    bg=\"darkgreen\"\n                    onPress={() => {\n                      handlePost();\n                      setShowModal(false);\n                    }}\n                  >\n                    Post\n                  </Button>\n                </HStack>\n              </Center>\n            </Modal.Header>\n            <Modal.Body>\n              {postType == \"socialPost\" && (\n                <FormControl>\n                  <Input\n                    height={550}\n                    mt=\"3\"\n                    multiline\n                    placeholder=\"Share something\"\n                    value={postData}\n                    onChangeText={(postData) => {\n                      setPostData(postData);\n                    }}\n                  />\n                </FormControl>\n              )}\n              {postType == \"event\" && (\n                <FormControl>\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    multiline\n                    placeholder=\"Name of the event\"\n                    value={state.eventName}\n                    onChangeText={(eventName) =>\n                      dispatch({ payload: { eventName } })\n                    }\n                  />\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    placeholder=\"Location\"\n                    value={state.location}\n                    onChangeText={(location) =>\n                      dispatch({ payload: { location } })\n                    }\n                  />\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    placeholder=\"Time\"\n                    value={state.eventTime}\n                    onChangeText={(eventTime) =>\n                      dispatch({ payload: { eventTime } })\n                    }\n                  />\n                  <Input\n                    height={450}\n                    mt=\"1\"\n                    multiline\n                    placeholder=\"Details\"\n                    value={state.details}\n                    onChangeText={(details) =>\n                      dispatch({ payload: { details } })\n                    }\n                  />\n                </FormControl>\n              )}\n            </Modal.Body>\n\n            <Modal.Footer></Modal.Footer>\n          </Modal.Content>\n        </Modal>\n\n        <Fab\n          renderInPortal={false}\n          shadow={2}\n          size=\"sm\"\n          icon={<Icon color=\"white\" as={AntDesign} name=\"plus\" size=\"sm\" />}\n          bg=\"darkgreen\"\n          onPress={() => setShowModal(true)}\n        />\n      </Page>\n      <Navbar navigation={navigation} name=\"plus\" as={AntDesign}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Community;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n  },\n  selectorText: {\n    fontSize: \"21\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useContext } from \"react\";\nimport { DarkModeContext, DarkModeProvider } from \"../context/darkModeContext\";\n\nconst Page = ({ children }) => {\n  const darkMode = useContext(DarkModeContext);\n  return (\n    <View style={styles.page}>\n      <DarkModeProvider>{children}</DarkModeProvider>\n    </View>\n  );\n};\n\nexport default Page;\n\nconst styles = StyleSheet.create({\n  page: {\n    height: \"94%\",\n  },\n  dark: {},\n  light: {},\n});\n","import React, { createContext, useState } from \"react\";\nconst DarkModeContext = createContext();\n\nfunction DarkModeProvider(props) {\n  const [darkMode, setDarkMode] = useState(false);\n  function toggleDarkMode() {\n    setDarkMode(!darkMode);\n  }\n  return (\n    <DarkModeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n}\n\nexport { DarkModeContext, DarkModeProvider };\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Image, View, VStack, HStack, Actionsheet, ScrollView, Box } from \"native-base\";\nimport { getCollection, getUserDataByID } from \"../firebase\";\nimport { Entypo, FontAwesome5 } from \"@expo/vector-icons\";\nimport ExpandedPost from \"./ExpandedPost\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { getGPC } from \"../global\";\n\nconst profilePicSize = 50;\n\nconst SocialPost = (props) => {\n  const [actionsheetIsOpen, setActionSheetIsOpen] = useState(false);\n  function onActionsheetClose() {setActionSheetIsOpen(false)}\n  function onActionsheetOpen() {setActionSheetIsOpen(true)}\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  let GPCl = getGPC();\n  return (\n    <TouchableWithoutFeedback onPress={() => setShowCommentModal(true)}>\n      <View style={styles.postWrapper}>\n        {showCommentModal && (\n          <ExpandedPost props={props} showCommentModal={showCommentModal} setShowCommentModal={setShowCommentModal}></ExpandedPost>\n        )}\n        {props.type == \"socialPost\" && (\n          <View style={styles.socialPost}>\n            <HStack space={2}>\n              <Image style={styles.profilePic} source={{uri: props.picture}} alt=\"profile picture\" ></Image>\n              <VStack space={0.2} w=\"full\">\n                <View style={{ flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                  <Text style={styles.name}>{props.name}</Text>\n                  <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                    <Text style={styles.time}>\n                      {dayjs(props.time).fromNow(true) + \" ago\"}\n                    </Text>\n                    <TouchableWithoutFeedback onPress={onActionsheetOpen}>\n                      <Entypo name=\"dots-three-horizontal\" size={12} color=\"black\" style={{ marginTop: 3 }}/>\n                    </TouchableWithoutFeedback>\n                    <Actionsheet isOpen={actionsheetIsOpen} onClose={onActionsheetClose}>\n                      <Actionsheet.Content>\n                        <Box w=\"100%\" h={60} px={4} justifyContent=\"center\"></Box>\n                        {GPCl.usrData_id == props.user && (\n                          <TouchableWithoutFeedback onPress={() => {}}>\n                            <Actionsheet.Item>Delete post</Actionsheet.Item>\n                          </TouchableWithoutFeedback>\n                        )}\n                        <Actionsheet.Item>Cancel</Actionsheet.Item>\n                      </Actionsheet.Content>\n                    </Actionsheet>\n                  </View>\n                </View>\n                <View w=\"90%\">\n                  <Text style={styles.body}>{props.body}</Text>\n                </View>\n                <HStack mt=\"2\" space={1}>\n                  <View style={{ marginTop: 1.5 }}>\n                    <FontAwesome5 name=\"comment\" size={16} color=\"grey\" />\n                  </View>\n                  <Text style={{ color: \"grey\" }}>{props.commentCount}</Text>\n                </HStack>\n              </VStack>\n            </HStack>\n          </View>\n        )}\n\n        {props.type == \"event\" && (\n          <View style={styles.eventPost}>\n            <HStack space={2}>\n              <Image style={styles.profilePic} source={{ uri: props.picture }} alt=\"profile picture\"></Image>\n              <VStack space={0.2} w=\"full\">\n                <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }} >\n                  <Text style={styles.name}>{props.name}</Text>\n                  <View style={{ flexDirection: \"row\", marginRight: \"20%\" }}>\n                    <Text style={styles.time}>\n                      {dayjs(props.time).fromNow(true) + \" ago\"}\n                    </Text>\n                    <TouchableWithoutFeedback onPress={onActionsheetOpen}>\n                      <Entypo name=\"dots-three-horizontal\" size={12} color=\"black\" style={{ marginTop: 3 }}/>\n                    </TouchableWithoutFeedback>\n                    <Actionsheet isOpen={actionsheetIsOpen} onClose={onActionsheetClose}>\n                      <Actionsheet.Content>\n                        <Box w=\"100%\" h={60} px={4} justifyContent=\"center\" ></Box>\n                        {GPCl.usrData_id == props.user && (\n                          <TouchableWithoutFeedback onPress={() => {}}>\n                            <Actionsheet.Item>Delete post</Actionsheet.Item>\n                          </TouchableWithoutFeedback>\n                        )}\n                        <Actionsheet.Item>Cancel</Actionsheet.Item>\n                      </Actionsheet.Content>\n                    </Actionsheet>\n                  </View>\n                </View>\n                <VStack w=\"90%\">\n                  <View style={styles.eventDetails}>\n                    <Text style={[styles.eventTitle, styles.detailsText]}>\n                      {props.eventName}\n                    </Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.setDetails}>Time</Text>\n                    <Text style={styles.detailsText}>{props.eventTime}</Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.setDetails}>Location</Text>\n                    <Text style={styles.detailsText}>{props.location}</Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.detailsText}>{props.body}</Text>\n                  </View>\n                </VStack>\n                <HStack mt=\"2\" space={1}>\n                  <View style={{ marginTop: 1.5 }}>\n                    <FontAwesome5 name=\"comment\" size={16} color=\"grey\" />\n                  </View>\n                  <Text style={{ color: \"grey\" }}>{props.commentCount}</Text>\n                </HStack>\n              </VStack>\n            </HStack>\n          </View>\n        )}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst SocialCluster = (props) => {\n  const [data, setData] = useState([]);\n  const [dataReady, setDataReady] = useState(false);\n  dayjs.extend(relativeTime);\n  useEffect(() => {\n    \n    //clear states for the 'pseudo-refresh'\n    setData([]);\n    setDataReady(false);\n\n    //join posts with user data\n    getCollection(\"posts\").then((colData) => {\n      colData.forEach(async (post) => {\n        const usrData = await getUserDataByID(post.user);\n        setData((data) => [...data,\n          {[post.id]: {...post,\n              firstName: usrData.firstName,\n              lastName: usrData.lastName,\n              picture: usrData.profilePicture,\n              id: post.id,\n          }},\n        ]);\n      });\n      setDataReady(true);\n    });\n  }, [props.refresh]);\n  if (!dataReady) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <ScrollView>\n        {Object.values(data).map((post) => {\n          post = Object.values(post)[0];\n          return (\n            <SocialPost\n              key={post.id}\n              id={post.id}\n              name={post.firstName + \" \" + post.lastName}\n              picture={post.picture}\n              body={post.body ? post.body : post.details}\n              time={post.time.toDate()}\n              type={post.type}\n              eventName={post.eventName}\n              eventTime={post.eventTime}\n              location={post.location}\n              commentCount={post.commentCount}\n              user={post.user}\n            ></SocialPost>\n          );\n        })}\n      </ScrollView>\n    );\n  }\n};\n\nexport default SocialCluster;\n\nconst styles = StyleSheet.create({\n  postWrapper: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n    marginLeft: 4,\n    paddingVertical: 10,\n  },\n  eventPost: {},\n  socialPost: {},\n  setDetails: { fontWeight: \"bold\" },\n  detailsText: { marginBottom: 6 },\n  eventDetails: {},\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  eventTitle: { fontSize: 22 },\n  time: { textAlign: \"right\", marginRight: 5 },\n});\n","import { StyleSheet, TouchableWithoutFeedback } from \"react-native\";\nimport {\n  Image, VStack, HStack, View, Text, Modal, Divider, Input,\n} from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { createComment } from \"../firebase\";\nimport { getGPC } from \"../global\";\nimport dayjs from \"dayjs\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Comments from \"../components/Comments\";\nconst profilePicSize = 50;\n\nconst ExpandedPost = (props) => {\n  const [newComment, setNewComment] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [GPCl, setGPCl] = useState({});\n  useEffect(() => setGPCl(getGPC()), []);\n  function postComment(newComment) {\n    if (!newComment.match(\"[^ ]\")) return;\n    createComment(props.props.id, newComment);\n    setNewComment(\"\");\n    setRefresh(!refresh);\n  }\n\n  return (\n    <Modal\n      isOpen={props.showCommentModal}\n      onClose={() => props.setShowCommentModal(false)}\n      size={\"full\"}\n      justifyContent=\"flex-start\"\n      style={styles.modal}\n    >\n      <Modal.Content>\n        <Modal.CloseButton />\n        <Modal.Header>\n          {props.props.type == \"socialPost\" ? \"Post\" : \"Event\"}\n        </Modal.Header>\n        <Modal.Body>\n          {props.props.type == \"socialPost\" && (\n            <View>\n              <HStack space={2}>\n                <Image style={styles.profilePic} source={{ uri: props.props.picture, }} alt=\"profile picture\" ></Image>\n                <VStack space={0.2} w=\"full\">\n                  <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                    <Text style={styles.name}>{props.props.name}</Text>\n                    <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                      <Text style={styles.time}> {dayjs(props.props.time).format(\"D MMM YYYY H:mm\")} </Text>\n                    </View>\n                  </View>\n                  <View w=\"90%\">\n                    <Text style={styles.body}>{props.props.body}</Text>\n                  </View>\n                </VStack>\n              </HStack>\n            </View>\n          )}\n          {props.type == \"event\" && (\n            <View style={styles.eventPost}>\n              <HStack space={2}>\n                <Image style={styles.profilePic} source={{ uri: props.props.picture, }} alt=\"profile picture\"></Image>\n                <VStack space={0.2} w=\"full\">\n                  <View style={{ flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                    <Text style={styles.name}>{props.props.name}</Text>\n                    <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                      <Text style={styles.time}>{props.props.time}</Text>\n                    </View>\n                  </View>\n                  <VStack w=\"90%\">\n                    <View style={styles.eventDetails}>\n                      <Text style={[styles.eventTitle, styles.detailsText]}>\n                        {props.props.eventName}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.setDetails}>Time</Text>\n                      <Text style={styles.detailsText}>\n                        {props.props.eventTime}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.setDetails}>Location</Text>\n                      <Text style={styles.detailsText}>\n                        {props.props.location}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.detailsText}>{props.props.body}</Text>\n                    </View>\n                  </VStack>\n                </VStack>\n              </HStack>{\" \"}\n            </View>\n          )}{\" \"}\n          <Divider mb={4} thickness=\"2\"></Divider>\n          <Comments postProps={{ ...props.props, refresh }}></Comments>\n        </Modal.Body>\n\n        <Modal.Footer></Modal.Footer>\n\n        <HStack space={1.5} ml={1}>\n          <Image style={styles.myCommPic} source={{ uri: GPCl.usrData_profilePicture}} alt=\"profile picture\"></Image>\n          <Input\n            placeholder=\"Add a comment\"\n            w=\"80%\"\n            variant=\"rounded\"\n            mb={1}\n            value={newComment}\n            onChangeText={(e) => { setNewComment(e); }}\n          ></Input>\n          <TouchableWithoutFeedback onPress={() => { postComment(newComment) }}>\n            <FontAwesome name=\"send-o\" size={18} color=\"gray\" style={{ paddingTop: 8 }}/>\n          </TouchableWithoutFeedback>\n        </HStack>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ExpandedPost;\n\nconst styles = StyleSheet.create({\n  postWrapper: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n    marginLeft: 4,\n    paddingVertical: 10,\n  },\n  modal: {\n    marginTop: \"10%\",\n    marginHorizontal: \"1%\",\n  },\n  comments: {\n    justifyContent: \"left\",\n  },\n  setDetails: { fontWeight: \"bold\" },\n  detailsText: { marginBottom: 6 },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  time: { textAlign: \"right\", marginRight: 5 },\n  myCommPic: {\n    width: 30,\n    height: 30,\n    borderRadius: 30 / 2.5,\n    borderColor: \"gray\",\n  },\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  eventTitle: { fontSize: 22 },\n});\n","import { StyleSheet, FlatList } from \"react-native\";\nimport { Image, VStack, HStack, View, Text, Divider } from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { getComments, getUserDataByID } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nconst profilePicSize = 50;\n\nconst Comments = (props) => {\n  const [dataReady, setDataReady] = useState(false);\n  const [data, setData] = useState([]);\n  let shortNo = Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\n  useEffect(() => {\n    //init for refresh mechanism\n    console.log(\"new effect\");\n    let comCount = 0;\n    setDataReady(false);\n    setData([]);\n    let results = [];\n    getComments(props.postProps.id).then((comments) => {\n      console.log(comments);\n      if (!comments || comments.length == 0) { setDataReady(\"noComments\"); return; }\n      comCount = comments.length;\n\n      comments.forEach((comment) => {\n        //join user data on comment objects\n\n        getUserDataByID(comment.from).then((usrData) => {\n          results.push({\n            photo: usrData.photo,\n            firstName: usrData.firstName,\n            lastName: usrData.lastName,\n            ...comment,\n          });\n\n          if (results.length == comCount) {\n            setData(results);\n            setDataReady(true);\n            return;\n          }\n        });\n      });\n    });\n  }, [props.postProps.refresh]); //on pseudorefresh side-effect\n\n  if (!dataReady) return <Text>Loading...</Text>;\n  if (dataReady == \"noComments\") return <Text>No comments</Text>;\n  if (dataReady && data)\n    return (\n      <FlatList data={data}\n        renderItem={(comment) => (\n          <View>\n            <HStack space={2} mb={2}>\n              <Image\n                style={styles.profilePic}\n                source={{ uri: comment.item.photo }}\n                alt=\"profile picture\"\n              ></Image>\n              <VStack space={0.2} w=\"full\">\n                <View\n                  style={{ flexDirection: \"row\", justifyContent: \"space-between\", }}\n                >\n                  <Text style={styles.name}>\n                    {comment.item.firstName + \" \" + comment.item.lastName}\n                  </Text>\n                  <View\n                    style={{ flexDirection: \"row\", marginRight: \"20%\" }}\n                  >\n                    <Text style={styles.time}>\n                      {dayjs(comment.item.time.toDate()).fromNow(true) + \" ago\"}\n                    </Text>\n                    <Entypo\n                      name=\"dots-three-horizontal\"\n                      size={12}\n                      color=\"black\"\n                      style={{ marginTop: 3 }}\n                    />\n                  </View>\n                </View>\n                <View w=\"90%\">\n                  <Text style={styles.body}>{comment.item.body}</Text>\n                </View>\n              </VStack>\n            </HStack>\n            <Divider mb={2}></Divider>\n          </View>\n        )}\n      />\n    );\n};\n\nexport default Comments;\n\nconst styles = StyleSheet.create({\n  comment: { marginLeft: -15, marginRight: -5, paddingBottom: -150 },\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  time: { textAlign: \"right\", marginRight: 5 },\n});\n","import { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport { NativeBaseProvider, Center, Avatar, HStack, Input } from \"native-base\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { retrieve } from \"../storage\";\nimport { getGPC } from \"../global\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { newRealtimeMessage, getRealtimeMessages } from \"../firebase\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Conversation = ({ navigation, route }) => {\n  const convo = route.params.convo;\n  let chatteePic = route.params.chatteeImg;\n  const [myData, setMyData] = useState();\n  const [myPic, setMyPic] = useState();\n  const [message, setMessage] = useState();\n  const [GPCl, setGPCl] = useState({});\n\n  function sendMessage(message) {\n    if (!message.match(\"[^ ]\")) return;\n    newRealtimeMessage({ body: message }, convo);\n    setMessage(\"\");\n  }\n\n  useEffect(() => {\n    setGPCl(getGPC());\n    if (GPCl[\"usrData_profilePicture\"])\n      setMyPic(GPCl[\"usrData_profilePicture\"]);\n    getRealtimeMessages(convo, setMyData);\n  }, []);\n\n  if (!myData) {\n    return <Text>Loading...</Text>;\n  } else\n    return (\n      <NativeBaseProvider>\n        <KeyboardAvoidingView behavior=\"padding\">\n          <View style={styles.pageContainer}>\n            <Header />\n\n            {Object.keys(myData).map((messageKey) => {\n              myData[messageKey].pic = chatteePic;\n\n              return (\n                <View key={messageKey}>\n                  <HStack\n                    space={2}\n                    style={[\n                      myData[messageKey].from === auth.currentUser.uid\n                        ? styles.myMsgStack\n                        : styles.otherMsgStack,\n                      styles.chatHStack,\n                    ]}\n                  >\n                    <Avatar\n                      style={styles.chatteeImg}\n                      size=\"sm\"\n                      display={\n                        myData[messageKey].from === auth.currentUser.uid\n                          ? \"none\"\n                          : \"\"\n                      }\n                      source={{\n                        uri: myData[messageKey].pic,\n                      }}\n                    ></Avatar>\n                    <View style={styles.messageBox}>\n                      <Text style={styles.messageText}>\n                        {myData[messageKey].body}\n                      </Text>\n                    </View>\n                  </HStack>\n                </View>\n              );\n            })}\n          </View>\n          <HStack style={{ marginVertical: 10 }}>\n            <Input\n              style={styles.input}\n              variant=\"rounded\"\n              backgroundColor={bkgColor}\n              w=\"85%\"\n              marginLeft={3}\n              value={message}\n              onChangeText={(e) => {\n                setMessage(e);\n              }}\n            ></Input>\n            <TouchableWithoutFeedback\n              onPress={() => {\n                sendMessage(message);\n              }}\n            >\n              <FontAwesome\n                name=\"send-o\"\n                size={18}\n                color=\"gray\"\n                style={{\n                  paddingTop: 8,\n                  paddingLeft: 10,\n                }}\n              />\n            </TouchableWithoutFeedback>\n          </HStack>\n\n          <Navbar navigation={navigation}></Navbar>\n        </KeyboardAvoidingView>\n      </NativeBaseProvider>\n    );\n};\n\nexport default Conversation;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"87%\",\n    backgroundColor: bkgColor,\n  },\n  chatteeImg: {\n    marginVertical: 10,\n  },\n  chatHStack: {\n    marginHorizontal: 4,\n  },\n  myMsgStack: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginRight: 10,\n  },\n  otherMsgStack: { justifyContent: \"flex\", alignItems: \"flex\", marginLeft: 10 },\n  messageBox: {\n    backgroundColor: \"#a2c794\",\n    borderRadius: 8,\n    flex: 0.75,\n    height: \"auto\",\n    marginTop: 8,\n  },\n  messageText: { marginHorizontal: 12, paddingVertical: 10 },\n  input: {},\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport { NativeBaseProvider, Center, View, Button } from \"native-base\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { auth } from \"../firebase\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Settings = ({ navigation }) => {\n  return (\n    <NativeBaseProvider>\n      <View style={styles.pageContainer}>\n        <Header />\n        <Center>\n          {\" \"}\n          <Button\n            style={styles.logoutBtn}\n            w=\"80%\"\n            variant=\"outline\"\n            onPress={() => {\n              auth\n                .signOut()\n                .then(() => {\n                  console.log(\"user successfuly signed out\");\n                  navigation.navigate(\"LoginScreen\");\n                })\n                .catch(function (error) {\n                  console.log(\"sign-out error\", error);\n                });\n            }}\n          >\n            Log out\n          </Button>\n        </Center>\n      </View>\n      <Navbar navigation={navigation}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Settings;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n  logout: {},\n});\n","import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport EditProfile from \"./screens/EditProfile\";\nimport Cards from \"./screens/Cards\";\nimport { NativeBaseProvider } from \"native-base\";\nimport CreateAccount from \"./screens/CreateAccount\";\nimport CreateAccount2 from \"./screens/CreateAccount2\";\nimport CreateAccount3 from \"./screens/CreateAccount3\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Chat from \"./screens/Chat\";\nimport Community from \"./screens/Community\";\nimport Navbar from \"./components/Navbar\";\nimport Conversation from \"./screens/Conversation\";\nimport Settings from \"./screens/Settings\";\nimport {LogBox} from 'react-native';\n\nconst Stack = createNativeStackNavigator();\nLogBox.ignoreAllLogs();\n\nexport default function App() {\n  return (\n    <NativeBaseProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n        \n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"LoginScreen\"\n            component={LoginScreen}\n          /><Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Settings\"\n            component={Settings}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Chat\"\n            component={Chat}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Cards\"\n            component={Cards}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Conversation\"\n            component={Conversation}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"EditProfile\"\n            component={EditProfile}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Community\"\n            component={Community}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Navbar\"\n            component={Navbar}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount\"\n            component={CreateAccount}\n          />\n          \n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount2\"\n            component={CreateAccount2}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"ForgotPassword\"\n            component={ForgotPassword}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount3\"\n            component={CreateAccount3}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </NativeBaseProvider>\n  );\n}\n\nconst styles = StyleSheet.create({});\n","import { Platform } from \"react-native\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport {\n  getFirestore, collection, getDocs, doc, setDoc, orderBy, where, query, updateDoc, getDoc, limit,\n} from \"firebase/firestore\";\nimport {//blob storage\n  uploadString, getStorage, ref, getDownloadURL,\n} from \"firebase/storage\";\nimport {\n  getDatabase, set, ref as storageRef, update as updateRealtime, onValue, get as realtimeGet, query as realtimeQuery,\n} from \"firebase/database\"; //realtimeDB\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"@firebase/auth\";\nimport \"@firebase/firestore\";\nimport { appendGPC, setGPC } from \"./global\";\nimport \"react-native-get-random-values\";\nimport { v4 as uuidv4, validate } from \"uuid\";\nimport {\n  API_KEY,\n  AUTH_DOMAIN,\n  DATABASE_URL,\n  PROJECT_ID,\n  STORAGE_BUCKET,\n  MESSAGING_SENDER_ID,\n  APP_ID,\n  MEASUREMENT_ID,\n  BUNDLE_ID\n} from \"@env\";\n\nconst firebaseConfig = {\n  apiKey: API_KEY,\n  authDomain: AUTH_DOMAIN,\n  databaseURL: DATABASE_URL,\n  projectId: PROJECT_ID,\n  storageBucket: STORAGE_BUCKET,\n  messagingSenderId: MESSAGING_SENDER_ID,\n  appId: APP_ID,\n  measurementId: MEASUREMENT_ID,\n  bundleId:BUNDLE_ID\n};\n\nlet app;\nif (firebase.apps.length === 0) app = firebase.initializeApp(firebaseConfig);\nelse app = firebase.app();\n\nconst auth = firebase.auth();\n/////////////////////User creation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nasync function createUser(email, password, userData) {\n  const response = await createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(\"User creation successful\");\n      writeUserDataAtCreation(userData);\n      return 0;\n    })\n    .catch((error) => {\n      console.log(\"User creation error\", error.code);\n      return error.code;\n    });\n  Object.keys(userData).forEach((key) => {\n    appendGPC({ [\"usrData_\" + key]: userData[key] }); //temp assignment to global until async server is complete\n  });\n  return response;\n}\n\n/////////////////////////Firestore DB\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst firestoreDb = getFirestore();\nconst usersRef = collection(firestoreDb, \"users\");\n\nasync function writeUserDataAtCreation(userData) {\n  try {\n    validate;\n    appendUserData(userData);\n    storePicture(\n      \"https://firebasestorage.googleapis.com/v0/b/greenpineconnects.appspot.com/o/def.png?alt=media&token=dfefab79-7b79-4988-8967-616a63ccdfec\"\n    );\n  } catch (error) {console.log(\"DB write error\", error);}\n}\n\nexport async function getUserData() {\n  let data = [];\n  const querySnapshot = await getDocs(usersRef);\n  querySnapshot.forEach((doc) => {data.push({ ...doc.data(), ...{ id: doc.id } });});\n  return data;\n}\n\nexport async function getUserDataByID(id) {\n  console.log(\"getting usr data for\", id);\n  try {\n    const docRef = doc(firestoreDb, \"users\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) return docSnap.data();\n    else {\n      console.log(`The document matching the requested ID of ${id} was not found.`);\n      return 0;\n    }\n  } catch (error) {console.log(\"GetUserDataByID error\", error);}\n}\n\nasync function commentCount(postID, func) {\n  const commentRef = doc(firestoreDb, \"posts\", postID);\n  const increment = func == \"add\" ? 1 : -1;\n  await updateDoc(commentRef, {commentCount: firebase.firestore.FieldValue.increment(increment)});\n}\n\nexport async function createComment(postID, comment) {\n  try {\n    const commentRef = doc(firestoreDb, \"comments\", postID);\n    let newId = uuidv4();\n    await setDoc(\n      commentRef,\n      {[newId]: {\n          body: comment,\n          from: auth.currentUser.uid,\n          id: newId,\n          time: firebase.firestore.Timestamp.fromDate(new Date())},\n      },{ merge: true }\n    );\n    commentCount(postID, \"add\");\n    console.log(\"written new comment!\");\n  } catch (e) {console.log(\"writeComment error\", e);}\n}\n\nasync function changeProfilePic(newURL) {\n  try {\n    const ppicRef = doc(firestoreDb, \"users\", auth.currentUser.uid);\n    await updateDoc(ppicRef, {photo: newURL});\n  } catch (e) {console.log(\"changeProfilePic error\", error);}\n}\n\n//////////////////////Profile picture storage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nlet blobDb = getStorage();\n\nexport async function storePicture(uri) {\n  try {\n    Platform.OS === \"ios\" ? uri.replace(\"file://\", \"\") : uri;\n    const storageRef = ref(blobDb, auth.currentUser.uid);\n    uploadString(storageRef, uri, \"data_url\").then((snapshot) => {\n      console.log(\"Profile picture stored!\");\n      appendGPC({ usrData_image: uri });\n      getDownloadURL(snapshot.ref).then((downloadURL) => {changeProfilePic(downloadURL);});\n    });\n  } catch (error) {console.log(\"error storePicture \", error);}\n}\n\nexport async function getPictureOfUser(uid) {\n  //not working well, may be deprecated\n  blobDb = getStorage();\n  const rf = ref(blobDb, uid);\n  const res = await getDownloadURL(rf)\n    .then((pic) => {return pic})\n    .catch((error) => {\n      console.log(\"getPictureOfUser, getDownloadURL error: (codes on internet)\",error);\n      return;\n    });\n  return res;\n}\n///////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nasync function getAndGlobalizeUsrData() {\n  //called on login: gets data of logged user\n  const q = query(\n    collection(firestoreDb, \"users\"),\n    where(\"email\", \"==\", auth.currentUser.email)\n  );\n  const snap = await getDocs(q);\n  let response = new Object(),\n  newGPC = {};\n  snap.forEach((doc) => {response = doc.data();});\n  (function writeToGPC() {\n    for (key of Object.keys(response)) {\n      if (key === \"chats\") continue;\n      newGPC[\"usrData_\" + String(key)] = response[key];\n      console.log(\"stored in GPC \", \"usrData_\" + String(key), response[key]);\n    }\n  })();\n  newGPC[\"usrData_id\"] = auth.currentUser.uid;\n  setGPC(newGPC);\n  return response;\n}\n\nasync function appendUserData(userData) {\n  //deletes null values from object\n  Object.keys(userData).forEach((k) => userData[k] == null && delete userData[k]);\n  try {\n    const ref = doc(firestoreDb, \"users\", auth.currentUser.uid);\n    setDoc(ref, userData, { merge: true });\n  } catch (error) {console.log(\"DB write error\", error)}\n}\n\nexport async function newPost(data) {\n  console.log(data);\n  try {\n    const docRef = doc(firestoreDb, \"posts\", uuidv4());\n    setDoc(\n      docRef,\n      { ...data, time: firebase.firestore.Timestamp.fromDate(new Date()) },\n      { merge: true }\n    );\n    console.log(\"new post written\");\n  } catch (error) {console.log(\"newPost error\", error);}\n}\n\nexport async function writeToDB(collection, data) {\n  //may be deprecated\n  try {\n    const docRef = doc(firestoreDb, collection, auth.currentUser.uid);\n    updateDoc(docRef, data);\n  } catch (error) {console.log(\"writeToDB error\", error);}\n}\n\nexport async function getCollection(col) {\n  try {\n    const postsRef = collection(firestoreDb, col);\n    const q = query(postsRef, orderBy(\"time\", \"desc\"), limit(20));\n    const snap = await getDocs(q);\n    let response = [];\n    snap.forEach((el) => response.push({ ...el.data(), id: el.id }));\n    response = response.sort((a, b) =>a.time.seconds < b.time.seconds ? 1 : -1);\n    return response;\n  } catch (error) {console.log(\"getAllCollection error\", error);}\n}\n\nexport async function getComments(postID) {\n  try {\n    const commentsRef = collection(firestoreDb, \"comments\");\n    const postRef = doc(commentsRef, postID);\n    const snap = await getDoc(postRef);\n    let response = [];\n    if (!snap.data()) {\n      console.log(\"no Comments\");\n      return;\n    }\n    Object.values(snap.data()).forEach((el) =>response.push({ ...el, id: el.id }));\n    response = response.sort((a, b) =>a.time.seconds < b.time.seconds ? 1 : -1);\n    return response;\n  } catch (error) {console.log(\"getComments error\", error)}\n}\n///////////////////Firebase realtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nconst realtimeDb = getDatabase();\n\nexport function createNewConvo(withPerson) {}\n\nexport async function getChatData(convoID) {\n  const chatsRef = storageRef(realtimeDb, \"chats/\" + convoID);\n  const q = realtimeQuery(chatsRef);\n  return await realtimeGet(q, (snapshot) => {return snapshot});\n}\n\nexport function newRealtimeMessage(data, convoID) {\n  try {\n    updateRealtime(\n      storageRef(realtimeDb, \"messages/\" + convoID + \"/\" + uuidv4()),\n      {\n        //make new uuid for message, write data inside it. add timestamp and uid\n        ...data,\n        ...{ time: firebase.firestore.Timestamp.fromDate(new Date()) },\n        ...{ from: auth.currentUser.uid },\n      });\n    updateLastMessage(data.body, convoID);\n  } catch (error) { console.log(\"realtimeWrite error\", error);}\n}\n\nexport function updateLastMessage(message, convoID) {\n  let updates = {};\n  updates[\"/chats/\" + convoID + \"/lastMessage\"] = message;\n  try { updateRealtime(storageRef(realtimeDb), updates);\n  } catch (error) {console.log(\"updateLastMessage error\", error);}\n}\n\nexport function getRealtimeMessages(convoID, setMyData) {\n  const messagesRef = storageRef(realtimeDb, \"messages/\" + convoID);\n  console.log(\"getting convo\", convoID, messagesRef);\n  const q = realtimeQuery(messagesRef);\n  onValue(q, (snapshot) => {\n    let data = [];\n    snapshot.forEach((child) => {data.push(child.val());});\n    //incoming realtime messages handled here\n    console.log(\"existing messages:\", data);\n    data = data.sort((a, b) => (a.time.seconds > b.time.seconds ? 1 : -1));\n    setMyData(data);\n  });\n}\n\nexport function swipeRight(swipedRightOn) {\n  getRightSwipes(auth.currentUser.uid).then((mySwipes) => {\n    mySwipes = mySwipes.val();\n    appendGPC({ [\"usrData_\" + \"swipedRightOn\"]: Object.keys(mySwipes) });\n    console.log(\"my swipes\", mySwipes);\n    console.log(\"adding right swipe data on: \", swipedRightOn);\n    let obj = {};\n    obj[swipedRightOn] = \"true\";\n    try {\n      set(\n        storageRef(realtimeDb,\"swipes/\" + auth.currentUser.uid + \"/swipedRightOn\"),{...mySwipes,...obj,}\n      );\n    } catch (error) { console.log(\"swipeRight DB error\", error)}\n  });\n  matchCheck(swipedRightOn);\n}\n\nexport async function getRightSwipes(ofPerson) {\n  const rightSwipesRef = storageRef(realtimeDb, \"swipes/\" + ofPerson + \"/swipedRightOn\");\n  return await realtimeGet(rightSwipesRef);\n}\n\nexport function matchCheck(withPerson) {\n  getRightSwipes(withPerson).then((theirSwipes) => {\n    if (!theirSwipes.val()) return;\n    if (Object.keys(theirSwipes.val()).includes(auth.currentUser.uid)) console.log(\"match\")\n    else console.log(\"no match\");\n  });\n}\n//////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nexport { auth, createUser, getAndGlobalizeUsrData, appendUserData };\n","import {\n  auth,\n  createUser,\n  getAndGlobalizeUsrData,\n  writeToDB,\n  checkAuth,\n  getPictureOfUser,\n} from \"../firebase\";\nimport { store, retrieve } from \"../storage\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as Application from \"expo-application\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {PREVIEW_PASS} from \"@env\";\n\nconst textColor = \"#dae8d4c9\";\n\nconst LoginScreen = ({ navigation }) => {\n  //---------//TESTING AREA//-----------\\\\\n\n  //------------------------------------//\n  //hooks\n  useEffect(() => {\n    console.log(\"App starting\");\n    AsyncStorage.clear();\n    //auto-login with session\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        handleLogin();\n      } else {\n        console.log(\"user not signed in\");\n      }\n    });\n  }, []);\n\n  let [show, setShow] = useState(true);\n  let [email, setEmail] = useState();\n  let [password, setPassword] = useState();\n\n  const handleSignUp = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"registered with\", user.email);\n      })\n      .catch((error) => {\n        console.log(\"badSignup: \", error.message);\n        alert(\"Invalid signup\");\n      });\n  };\n\n  function handleLogin() {\n    getAndGlobalizeUsrData().then(() => {\n      navigation.navigate(\"Cards\");\n    });\n  }\n\n  async function handleLogInWithEmailAndPassword() {\n    if(email === 'preview') {\n      email = 'alex@admin.com';\n      password = PREVIEW_PASS;\n    }\n    \n    await auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"logged in with\", user.email);\n        handleLogin();\n      })\n      .catch((error) => {\n        console.log(\"badLogin: \", error.message);\n        alert(\"Invalid login\");\n      });\n  }\n\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else {\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={styles.loginpage}\n        >\n          <Text style={styles.title}>Green Pine Connects</Text>\n          <Text style={styles.subtitle1}>\n            A global application to increase resources for Film and TV\n            professionals{\" \"}\n          </Text>\n          <Text style={styles.subtitle2}>By the Green Pine Foundation</Text>\n          <KeyboardAvoidingView behavior=\"padding\">\n            <View>\n              <Text style={styles.loginText}>Log in</Text>\n              <Input\n                style={styles.input}\n                variant=\"underlined\"\n                size=\"2xl\"\n                mx=\"4\"\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={(email) => {\n                  setEmail(email.toLowerCase());\n                }}\n              ></Input>\n              <Input\n                secureTextEntry={show}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                defaultValue={password}\n                onChangeText={(password) => {\n                  setPassword(password);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow(!show);\n                    }}\n                  />\n                }\n                placeholder=\"Password\"\n              ></Input>\n              <Text\n                style={styles.forgotPass}\n                onPress={() => navigation.navigate(\"ForgotPassword\")}\n              >\n                Forgot password?\n              </Text>\n            </View>\n\n            <Center>\n              <Button\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                  if (email && password) {\n                    handleLogInWithEmailAndPassword();\n                  }\n                }}\n              >\n                <Text style={styles.loginButton}>Log in</Text>\n              </Button>\n            </Center>\n\n            <View style={styles.lineContainer}>\n              <View style={styles.line} />\n              <Text style={styles.lineText}>or</Text>\n              <View style={styles.line} />\n            </View>\n\n            <Center>\n              <Button\n                startIcon={\n                  <FontAwesome\n                    style={styles.loginWithGoogleIcon}\n                    name=\"apple\"\n                    size={18}\n                    color=\"white\"\n                  />\n                }\n                style={styles.loginWithAppleButton}\n                bg=\"black\"\n                w=\"240\"\n                h=\"10\"\n                borderRadius=\"20\"\n              >\n                <Text style={styles.loginWithAppleText}>Log in with Apple</Text>\n              </Button>\n            </Center>\n\n            <Center>\n              <Button\n                title=\"Google Sign-In\"\n                startIcon={\n                  <FontAwesome\n                    style={styles.loginWithGoogleIcon}\n                    name=\"google\"\n                    size={18}\n                  />\n                }\n                style={styles.loginWithGoogleButton}\n                bg=\"white\"\n                w=\"240\"\n                h=\"10\"\n                marginTop=\"3\"\n                borderRadius=\"20\"\n                onPress={() =>\n                  onGoogleButtonPress().then(() =>\n                    console.log(\"Signed in with Google!\")\n                  )\n                }\n              >\n                <Text style={styles.loginWithGoogleText}>\n                  Log in with Google\n                </Text>\n              </Button>\n            </Center>\n\n            <View>\n              <Center>\n                <Text style={styles.newHere}>\n                  New here?{\" \"}\n                  <Text\n                    style={styles.createAccountText}\n                    onPress={() => navigation.navigate(\"CreateAccount\")}\n                  >\n                    Create an account\n                  </Text>\n                </Text>\n              </Center>\n            </View>\n          </KeyboardAvoidingView>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n  }\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  LoadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n\n  loginpage: {\n    flex: 1,\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n  },\n\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginTop: 75,\n    color: textColor,\n  },\n  subtitle1: {\n    fontFamily: \"Jost_600SemiBold\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 16,\n    color: textColor,\n    marginHorizontal: 5,\n    marginTop: 35,\n    marginBottom: 15,\n  },\n  subtitle2: {\n    fontFamily: \"Jost_600SemiBold\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 14,\n    color: textColor,\n    marginHorizontal: 5,\n    marginBottom: 100,\n  },\n\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n\n  input: {\n    fontSize: 17,\n    color: textColor,\n  },\n\n  forgotPass: {\n    color: textColor,\n    textDecorationLine: \"underline\",\n    textAlign: \"right\",\n    marginRight: 15,\n    marginBottom: 30,\n  },\n\n  loginButton: {\n    color: textColor,\n    fontSize: 16,\n  },\n\n  lineContainer: {\n    marginVertical: 15,\n    flexDirection: \"row\",\n  },\n\n  line: {\n    backgroundColor: textColor,\n    height: 1,\n    flex: 1,\n    alignSelf: \"center\",\n  },\n\n  lineText: {\n    color: textColor,\n    alignSelf: \"center\",\n    paddingHorizontal: 5,\n    fontSize: 14,\n  },\n\n  loginWithAppleButton: {},\n\n  loginWithAppleText: {\n    color: textColor,\n    fontSize: 16,\n  },\n\n  loginWithGoogleIcon: { marginTop: 2 },\n  loginWithGoogleText: {\n    color: \"black\",\n    fontSize: 16,\n  },\n\n  newHere: {\n    marginTop: 3,\n    marginBottom: -50,\n    color: textColor,\n    fontSize: 13,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n\n  createAccountText: {\n    textDecorationLine: \"underline\",\n  },\n});\n"],"sourceRoot":""}