{"version":3,"sources":["components/Navbar.js","storage.js","screens/EditProfile.js","components/Header.js","screens/Cards.js","components/Deck.js","screens/CreateAccount.js","screens/CreateAccount2.js","screens/CreateAccount3.js","screens/ForgotPassword.js","screens/Chat.js","screens/Community.js","components/Page.js","context/darkModeContext.js","components/SocialCluster.js","components/ExpandedPost.js","components/Comments.js","screens/Conversation.js","screens/Settings.js","App.js","firebase.js","screens/LoginScreen.js","global.js"],"names":["navigation","View","style","styles","navbar","NativeBaseProvider","HStack","justifyContent","onPress","navigate","navButton","w","rounded","shadow","VStack","h","Center","icon","FontAwesome","loginWithGoogleIcon","name","size","color","Ionicons","StyleSheet","create","height","backgroundColor","borderWidth","borderColor","store","obj","key","Object","keys","AsyncStorage","setItem","String","console","log","e","retrieve","value","getItem","useFonts","Jost_600SemiBold","fontsLoaded","useReducer","state","action","type","dispatch","useEffect","getAndGlobalizeUsrData","then","GPCl","getGPC","defaultState","firstName","lastName","aboutme","offer","seek","profession","experience","location","languages","profilePicture","useState","tooltipVisib","setTooltipVisib","showImagePicker","ImagePicker","requestMediaLibraryPermissionsAsync","granted","result","launchImageLibraryAsync","resizedPhoto","ImageManipulator","manipulateAsync","uri","resize","width","compress","cancelled","storePicture","alert","StatusBar","page","data","pageContainer","ScrollView","scrollView","Text","profilePicLabel","TouchableWithoutFeedback","Image","source","profilePic","alt","italic","tapToEdit","vstack","space","Input","input","bg","placeholder","required","defaultValue","disabled","label","TextArea","onChangeText","flexDirection","tooltip","isVisible","content","placement","onClose","touchable","header","paddingTop","borderBottomColor","borderBottomWidth","headerElements","fontWeight","fontSize","headerTitle","marginTop","alignItems","borderRadius","marginLeft","marginBottom","fontFamily","ConditionalDoneButton","props","Button","button","variant","appendUserData","forEach","appendGPC","image","doneText","route","useRoute","LobsterTwo_700Bold_Italic","headerSubTitle","jsonData","arrOfProfilesToShow","setData","myUID","auth","currentUser","uid","getUserData","r","finally","id","push","cards","cardVerticalMargin","verticalSwipe","renderCard","card","prop","photo","nameLabel","MaterialIcons","profileText","speaks","onSwiped","cardIndex","onSwipedAll","onSwipedLeft","onSwipedRight","stackSize","container","flex","show","setShow","show2","setShow2","email","setEmail","password","setPassword","password2","setPassword2","toast","useToast","LinearGradient","colors","start","x","y","end","loginpage","appView","title","behavior","loginText","mx","toLowerCase","secureTextEntry","InputRightElement","Icon","as","mr","passwordsMatch","emailValid","passwordValid","isActive","description","test","validate","loginButton","LoadingContainer","textAlign","alignContent","paddingLeft","birthday","setBirthday","isDatePickerVisible","setDatePickerVisibility","dateOptions","year","month","day","question","alignSelf","bdayBox","bdayText","toLocaleDateString","mode","onConfirm","date","onCancel","isDarkModeEnabled","today","Date","age","getFullYear","m","getMonth","getDate","getAge","validateBirthday","params","confirmTxt","setFirstName","setLastName","submitAccountStatus","setSubmitAccountStatus","userData","btn","createUser","setTimeout","btnText","submitStatus","marginHorizontal","recoveryEmail","setRecoveryEmail","myData","setMyData","pageStatus","setPageStatus","setGPCl","getUserDataByID","chats","convoKey","getChatData","chatData","val","members","member","usrData_id","otherPerson","theirData","noMessagesText","map","convo","chatteeImg","slice","Avatar","from","lastText","lastMessage","convserationSlice","view","paddingVertical","showModal","setShowModal","postType","setPostType","postData","setPostData","refresh","setRefresh","payload","eventName","eventTime","details","Modal","isOpen","avoidKeyboard","bottom","modal","Content","Header","ml","mt","selectorText","Divider","thickness","orientation","colorScheme","newPost","body","user","comments","commentCount","handlePost","Body","FormControl","multiline","Footer","Fab","renderInPortal","AntDesign","children","useContext","DarkModeContext","DarkModeProvider","dark","light","darkMode","setDarkMode","Provider","toggleDarkMode","createContext","SocialPost","actionsheetIsOpen","setActionSheetIsOpen","onActionsheetClose","onActionsheetOpen","showCommentModal","setShowCommentModal","postWrapper","socialPost","picture","marginRight","time","dayjs","fromNow","Entypo","Actionsheet","Box","px","Item","FontAwesome5","eventPost","eventDetails","eventTitle","detailsText","setDetails","dataReady","setDataReady","extend","relativeTime","getCollection","colData","post","usrData","values","toDate","profilePicSize","newComment","setNewComment","CloseButton","format","mb","postProps","myCommPic","usrData_profilePicture","match","createComment","postComment","Intl","NumberFormat","notation","comCount","results","getComments","length","comment","renderItem","item","paddingBottom","chatteePic","setMyPic","message","setMessage","getRealtimeMessages","messageKey","pic","myMsgStack","otherMsgStack","chatHStack","display","messageBox","messageText","marginVertical","newRealtimeMessage","sendMessage","logoutBtn","signOut","catch","error","logout","NavigationContainer","Stack","Navigator","Screen","options","headerShown","component","LoginScreen","Settings","Chat","Cards","Conversation","EditProfile","Community","Navbar","CreateAccount","CreateAccount2","ForgotPassword","CreateAccount3","createNativeStackNavigator","LogBox","ignoreAllLogs","withPerson","convoID","messagesRef","storageRef","realtimeDb","q","realtimeQuery","onValue","snapshot","child","sort","a","b","seconds","updateRealtime","uuidv4","firebase","firestore","Timestamp","fromDate","updateLastMessage","swipedRightOn","getRightSwipes","mySwipes","set","matchCheck","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bundleId","app","response","createUserWithEmailAndPassword","userCredential","writeUserDataAtCreation","code","firestoreDb","getFirestore","usersRef","collection","getDocs","doc","docRef","docSnap","getDoc","exists","postID","func","commentRef","increment","updateDoc","FieldValue","newId","setDoc","merge","changeProfilePic","newURL","ppicRef","blobDb","getStorage","Platform","OS","replace","ref","uploadString","usrData_image","getDownloadURL","downloadURL","rf","query","where","snap","newGPC","setGPC","k","col","postsRef","orderBy","limit","el","commentsRef","postRef","getDatabase","chatsRef","realtimeGet","updates","ofPerson","rightSwipesRef","theirSwipes","includes","clear","onAuthStateChanged","handleLogin","signInWithEmailAndPassword","userCredentials","subtitle1","subtitle2","forgotPass","handleLogInWithEmailAndPassword","lineContainer","line","lineText","startIcon","loginWithAppleButton","loginWithAppleText","loginWithGoogleButton","onGoogleButtonPress","loginWithGoogleText","newHere","createAccountText","padding","textDecorationLine","paddingHorizontal","flexWrap","GPC","newgpc"],"mappings":"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","file":"static/js/app.adaa5317.chunk.js","sourcesContent":["import { StyleSheet, TouchableWithoutFeedback } from \"react-native\";\nimport React from \"react\";\nimport { NativeBaseProvider, Center, HStack, View, VStack } from \"native-base\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\n\nconst Navbar = ({ navigation }) => {\n  return (\n    <View style={styles.navbar}>\n      <NativeBaseProvider>\n        <HStack justifyContent=\"center\">\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"EditProfile\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"user-o\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Chat\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <Ionicons style={styles.loginWithGoogleIcon} name=\"ios-chatbox-outline\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Cards\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"bars\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Community\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"users\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableWithoutFeedback onPress={() => navigation.navigate(\"Settings\")}>\n            <View style={styles.navButton} w=\"20%\" rounded=\"md\" shadow={3}>\n              <VStack>\n                <View h=\"3\"></View>\n                <Center style={styles.icon}>\n                  <FontAwesome style={styles.loginWithGoogleIcon} name=\"gear\" size={19} color=\"grey\"/>\n                </Center>\n              </VStack>\n            </View>\n          </TouchableWithoutFeedback>\n        </HStack>\n      </NativeBaseProvider>\n    </View>\n  );\n};\n\nexport default Navbar;\n\nconst styles = StyleSheet.create({\n  navbar: {\n    height: \"7.5%\",\n    backgroundColor: \"white\",\n  },\n  navButton: {\n    height: \"600%\",\n    borderWidth: \"0.4\",\n    borderColor:'lightgrey'\n  },\n});\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const store = async (obj) => {\n  try {\n    for (key of Object.keys(obj)) {\n      await AsyncStorage.setItem(String(key), String(obj[key]));\n      console.log(\"stored \", String(key), String(obj[key]));\n    }\n  } catch (e) {\n    console.log(\"asyncstorage write error\", e);\n  }\n};\n\nexport const retrieve = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value != null ? value : null;\n  } catch (e) {\n    console.log(\"asyncstorage read error\", e);\n  }\n};\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StyleSheet } from \"react-native\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport {\n  NativeBaseProvider,\n  Center,\n  TextArea,\n  VStack,\n  Image,\n  HStack,\n  Button,\n  Text,\n  View,\n  ScrollView,\n  StatusBar,\n  Input,\n} from \"native-base\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport Tooltip from \"react-native-walkthrough-tooltip\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { store, retrieve } from \"../storage\";\nimport Header from \"../components/Header\";\nimport {\n  appendUserData,\n  storePicture,\n  getPictureOfUser,\n  auth,\n  getAndGlobalizeUsrData,\n} from \"../firebase\";\nimport Navbar from \"../components/Navbar\";\nimport { getGPC } from \"../global\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\n\nconst profilePicSize = 200;\nconst headerColor = \"#ffffff\";\nconst bkgColor = \"#ebecf0\";\nconst inputColor = \"white\";\n\nconst ProfileSetup = ({ navigation }) => {\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n  });\n\n  function reduce(state, action) {\n    if (action.type === \"init\") return action.value;\n    return { ...state, [action.type]: action.value };\n  }\n\n  const [state, dispatch] = useReducer(reduce, {});\n\n  useEffect(() => {\n    getAndGlobalizeUsrData().then(() => {\n      GPCl = getGPC();\n      let defaultState = {\n        firstName: GPCl[\"usrData_firstName\"] ? GPCl[\"usrData_firstName\"] : \"\",\n        lastName: GPCl[\"usrData_lastName\"] ? GPCl[\"usrData_lastName\"] : \"\",\n        aboutme: GPCl[\"usrData_aboutme\"] ? GPCl[\"usrData_aboutme\"] : \"\",\n        offer: GPCl[\"usrData_offer\"] ? GPCl[\"usrData_offer\"] : null,\n        seek: GPCl[\"usrData_seek\"] ? GPCl[\"usrData_seek\"] : null,\n        profession: GPCl[\"usrData_profession\"]\n          ? GPCl[\"usrData_profession\"]\n          : null,\n        experience: GPCl[\"usrData_experience\"]\n          ? GPCl[\"usrData_experience\"]\n          : null,\n        location: GPCl[\"usrData_location\"] ? GPCl[\"usrData_location\"] : null,\n        languages: GPCl[\"usrData_languages\"] ? GPCl[\"usrData_languages\"] : null,\n        profilePicture: GPCl[\"usrData_profilePicture\"]\n          ? GPCl[\"usrData_profilePicture\"]\n          : \"https://cdn-icons-png.flaticon.com/512/875/875068.png\",\n      };\n      const action = {\n        type: \"init\",\n        value: defaultState,\n      };\n      dispatch(action);\n    });\n  }, []);\n\n  let [tooltipVisib, setTooltipVisib] = useState(false);\n\n  const showImagePicker = async () => {\n    // Ask the user for the permission to access the media library\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"You've refused to allow this app to access your photos!\");\n      return;\n    }\n    const result = await ImagePicker.launchImageLibraryAsync();\n    const resizedPhoto = await ImageManipulator.manipulateAsync(\n      result.uri,\n      [{ resize: { width: 250 } }],\n      { compress: 0.9 }\n    );\n    if (!result.cancelled) {\n      const action = {\n        type: \"profilePicture\",\n        value: resizedPhoto.uri,\n      };\n      dispatch(action);\n      storePicture(resizedPhoto.uri);\n      return;\n    } else {\n      return;\n    }\n  };\n\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <NativeBaseProvider>\n        <StatusBar></StatusBar>\n        <Header\n          page=\"editProfile\"\n          data={state}\n          navigation={navigation}\n        ></Header>\n        <View style={styles.pageContainer}>\n          <ScrollView>\n            <View style={styles.scrollView}>\n              <Text style={styles.profilePicLabel}>My Photo</Text>\n              <TouchableWithoutFeedback onPress={() => showImagePicker()}>\n                <Image\n                  source={{ uri: state.profilePicture }}\n                  style={styles.profilePic}\n                  alt=\"Profile picture\"\n                ></Image>\n              </TouchableWithoutFeedback>\n              <Text italic style={styles.tapToEdit}>\n                Tap to edit\n              </Text>\n\n              <VStack style={styles.vstack} space={5}>\n                <HStack>\n                  <Input\n                    style={styles.input}\n                    bg={inputColor}\n                    w=\"50%\"\n                    h=\"12\"\n                    placeholder=\"First name\"\n                    required\n                    defaultValue={state.firstName}\n                    disabled\n                  ></Input>\n                  <Input\n                    style={styles.input}\n                    bg={inputColor}\n                    w=\"50%\"\n                    placeholder=\"Last name\"\n                    defaultValue={state.lastName}\n                    required\n                    disabled\n                  ></Input>\n                </HStack>\n\n                <View>\n                  <Text style={styles.label}>About Me</Text>\n                </View>\n\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\"Tell us a few words about yourself:\n                            • What are your passions, interests and aspirations?\n                            • How do you go about achieveing your goals?\"\n                  required\n                  defaultValue={state.aboutme}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"aboutme\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <Text style={styles.label}>What I offer</Text>\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\" • What skills/experience do you want to share with others?\n              • What resources, services, or materials are you able to offer?\n               \"\n                  defaultValue={state.offer}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"offer\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <Text style={styles.label}>What I seek (optional) </Text>\n                  <View style={styles.tooltip}>\n                    <Tooltip\n                      isVisible={tooltipVisib}\n                      content={\n                        <Text>\n                          At GPF, we know how difficult it is to make an\n                          independent film and we strive to connect Film and TV\n                          professionals who can offer assistance without\n                          necessarily expecting a return. Hence this field is\n                          entirely optional\n                        </Text>\n                      }\n                      placement=\"top\"\n                      onClose={() => setTooltipVisib(false)}\n                    >\n                      <TouchableWithoutFeedback\n                        style={styles.touchable}\n                        onPress={() => setTooltipVisib(true)}\n                      >\n                        <FontAwesome\n                          name=\"question-circle\"\n                          size={20}\n                        ></FontAwesome>\n                      </TouchableWithoutFeedback>\n                    </Tooltip>\n                  </View>\n                </View>\n                <TextArea\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"95\"\n                  placeholder=\" • What do you seek by using this app?\n              • What sort of project are you looking for help for?\"\n                  defaultValue={state.seek}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"seek\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></TextArea>\n\n                <Text style={styles.label}>Profession</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"Add profession\"\n                  defaultValue={state.profession}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"profession\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n                <Text style={styles.label}>Years of experience</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  w=\"15%\"\n                  placeholder=\"ex.2\"\n                  defaultValue={state.experience}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"experience\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n\n                <Text style={styles.label}>Located in</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"ex. San Diego, CA\"\n                  defaultValue={state.location}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"location\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n\n                <Text style={styles.label}>Languages I speak</Text>\n                <Input\n                  style={styles.input}\n                  bg={inputColor}\n                  h=\"12\"\n                  placeholder=\"Add language\"\n                  defaultValue={state.languages}\n                  onChangeText={(e) => {\n                    const action = {\n                      type: \"languages\",\n                      value: e,\n                    };\n                    dispatch(action);\n                  }}\n                ></Input>\n                <View h=\"10\"></View>\n              </VStack>\n            </View>\n          </ScrollView>\n          <Navbar navigation={navigation}></Navbar>\n        </View>\n      </NativeBaseProvider>\n    );\n  }\n};\n\nexport default ProfileSetup;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"100%\",\n  },\n\n  header: {\n    paddingTop: 50,\n    backgroundColor: headerColor,\n    height: 100,\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1,\n  },\n\n  headerElements: { fontWeight: \"bold\", fontSize: 17 },\n  headerTitle: { fontSize: 18 },\n\n  scrollView: {\n    marginTop: 15,\n    alignItems: \"center\",\n  },\n\n  profilePic: {\n    marginTop: 10,\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 3.5,\n    borderColor: \"lightgray\",\n    borderWidth: 1,\n  },\n\n  profilePicLabel: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n  },\n  tooltip: {},\n\n  tapToEdit: {\n    fontSize: 12,\n  },\n\n  vstack: {\n    marginTop: 30,\n  },\n\n  label: {\n    marginLeft: 20,\n    fontSize: 17,\n    marginBottom: -13,\n    fontWeight: \"bold\",\n  },\n\n  input: {\n    fontFamily: \"Jost_600SemiBold\",\n    fontSize: 17,\n    width: \"100%\",\n  },\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport React from \"react\";\nimport { Center, HStack, View, Button } from \"native-base\";\nimport { useFonts, LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { appendUserData, storePicture } from \"../firebase\";\nimport { appendGPC } from \"../global\";\nconst headerColor = \"white\";\n\n//for EditProfile submit\nconst ConditionalDoneButton = (props) => {\n  if (props.page != \"editProfile\") return <View></View>;\n  return (\n    <Button\n      style={styles.button} variant=\"link\" bg={headerColor} h=\"10\" w=\"25%\"\n      onPress={() => {\n        //write to db\n        appendUserData(props.data).then(props.navigation.navigate(\"Cards\"));\n        Object.keys(props.data).forEach((key) => appendGPC({ [\"usrData_\" + key]: props.data[key] }));\n        if (props.data.image) storePicture(props.data.image);\n      }}>\n      <Text style={[styles.doneText, styles.headerElements]}>Save</Text>\n    </Button>\n  );\n};\n\nconst Header = (props) => {\n  const route = useRoute();\n  let [fontsLoaded] = useFonts({LobsterTwo_700Bold_Italic});\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <HStack style={styles.header} space={12} justifyContent=\"center\">\n        <Center h=\"10\" w=\"70%\">\n          <Text style={[styles.headerTitle, styles.headerElements]}>\n            Green Pine Connects\n          </Text>\n          <Text style={[styles.headerSubTitle, styles.headerElements]}>\n            {route.name === \"Cards\" ? \"\" : route.name}\n          </Text>\n          <ConditionalDoneButton\n            page={props.page} data={props.data} navigation={props.navigation}\n          ></ConditionalDoneButton>\n        </Center>\n      </HStack>\n    );\n  }\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    paddingTop: 50,\n    backgroundColor: headerColor,\n    height: 110,\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1,\n  },\n  headerElements: { fontWeight: \"bold\" },\n  headerTitle: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 25,\n    color: \"darkgreen\",\n  },\n  headerSubTitle: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 17,\n    color: \"darkgreen\",\n  },\n  button: {\n    marginTop: -40,\n    marginLeft: 310,\n  },\n  doneText: {\n    color: \"darkgreen\",\n    fontSize: 18,\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n  },\n});\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport { NativeBaseProvider, Center, HStack, View } from \"native-base\";\nimport React from \"react\";\nimport Deck from \"../components/Deck\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Cards = ({ navigation }) => {\n  return (\n    <NativeBaseProvider>\n      <View style={styles.pageContainer}>\n        <Header></Header>\n        <Deck></Deck>\n      </View>\n      <Navbar navigation={navigation}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Cards;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Swiper from \"react-native-deck-swiper\";\nimport { NativeBaseProvider, Image, View, VStack } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { getUserData, swipeRight, getRightSwipes, auth } from \"../firebase\";\n\nconst profilePicSize = 250;\nlet arrOfProfilesToShow = [];\nlet jsonData;\nconst Deck = () => {\n  const [data, setData] = useState();\n  const myUID = auth.currentUser.uid;\n  useEffect(() => {\n    arrOfProfilesToShow = [];\n    getUserData().then((r) => jsonData = r)\n      .finally(() => {\n        //convert object of objects to array of objects (cards accept arrays only)\n        Object.keys(jsonData).forEach((key) => { if (jsonData[key].id != myUID) arrOfProfilesToShow.push(jsonData[key]) });\n        console.log(\"profiles:\", arrOfProfilesToShow);\n        setData(arrOfProfilesToShow);\n      });\n  }, [auth]);\n\n  console.log(\"showing the following cards: \", arrOfProfilesToShow);\n\n  let [fontsLoaded] = useFonts({ LobsterTwo_700Bold_Italic, Jost_600SemiBold });\n\n  if (!fontsLoaded || !data) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <View>\n        <Swiper\n          cards={arrOfProfilesToShow}\n          cardVerticalMargin={2}\n          verticalSwipe={false}\n          renderCard={(card) => {\n            console.log(card);\n            let prop = card;\n            return (\n              <NativeBaseProvider>\n                <View style={styles.card}>\n                  <Image source={{ uri: prop.photo }} style={styles.profilePic} alt=\"Profile picture\" ></Image>\n                  <Text style={styles.nameLabel}>\n                    {prop.firstName} {prop.lastName}\n                  </Text>\n                  <Text style={styles.location}>\n                    <MaterialIcons name=\"location-pin\" size={16} color=\"black\"/>\n                    {prop.location}\n                  </Text>\n                  <VStack marginLeft=\"2\" space={2}>\n                    <Text style={styles.label}>About</Text>\n                    <Text style={styles.profileText}>{prop.aboutme}</Text>\n                    {prop.offer ?( \n                      <>\n                        <Text style={styles.label}>Offering</Text>\n                        <Text style={styles.profileText}>{prop.offer}</Text>\n                      </>) : (<></>)\n                    }\n                    {prop.seek ? (\n                      <>\n                        <Text style={styles.label}>Seeking</Text>\n                        <Text style={styles.profileText}>{prop.seek}</Text>\n                      </>) : (<></>)\n                    }\n                    <Text style={styles.label}>Profession</Text>\n                    <Text style={styles.profileText}>\n                      {prop.profession}, {prop.experience} years\n                    </Text>\n                    <Text style={styles.speaks}>Speaks: {prop.languages}</Text>\n                  </VStack>\n                </View>\n              </NativeBaseProvider>\n            );\n          }}\n          onSwiped={(cardIndex) => {}}\n          onSwipedAll={() => {\n            console.log(\"onSwipedAll\");\n          }}\n          onSwipedLeft={(cardIndex) => {\n            console.log(\"Swiped NO on\", arrOfProfilesToShow[cardIndex]);\n          }}\n          onSwipedRight={(cardIndex) => {\n            console.log(\"swiped right on\", arrOfProfilesToShow[cardIndex].id);\n            //swipeRight(arrOfProfilesToShow[cardIndex].id);\n          }}\n          cardIndex={0}\n          backgroundColor={\"#4FD0E9\"}\n          stackSize={3}\n        ></Swiper>\n      </View>\n    );\n  }\n};\n\nexport default Deck;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5FCFF\",\n  },\n\n  card: {\n    height: \"84%\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#E8E8E8\",\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n  },\n\n  profilePic: {\n    marginTop: 5,\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 3.5,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 12,\n  },\n\n  location: {\n    fontSize: 15,\n    marginTop: 5,\n  },\n\n  nameLabel: {\n    fontSize: 23,\n    fontWeight: \"bold\",\n    fontFamily: \"Jost_600SemiBold\",\n  },\n\n  label: { fontSize: 16, fontWeight: \"bold\", width: \"100%\" },\n  speaks: { fontSize: 16, width: \"100%\" },\n  profileText: { fontSize: 15 },\n});\n","import {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport {\n  NativeBaseProvider,\n  Input,\n  Button,\n  Icon,\n  Center,\n  useToast,\n} from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { store, retrieve } from \"../storage\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount = ({ navigation }) => {\n  let [show, setShow] = useState(true);\n  let [show2, setShow2] = useState(true);\n  let [email, setEmail] = useState();\n  let [password, setPassword] = useState();\n  let [password2, setPassword2] = useState();\n  const toast = useToast();\n\n  function validate() {\n    let passwordsMatch = false,\n      emailValid = false,\n      passwordValid = false;\n    const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    //Minimum eight characters, at least one letter and one number\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const id = \"toastID\";\n\n    if (password === password2) passwordsMatch = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({ id, description: \"Passwords do not match\" });\n      console.log(\"input passwords do not match\");\n    }\n    if (emailRegex.test(email)) emailValid = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({ id, description: \"Email is not valid\" });\n      console.log(\"input email is not valid\");\n    }\n\n    if (passwordRegex.test(password)) passwordValid = true;\n    else {\n      if (!toast.isActive(id))\n        toast.show({\n          id,\n          description:\n            \"Password does not contain minimum eight characters, at least one letter and one number\",\n        });\n      console.log(\"input password is invalid\");\n    }\n    if (passwordsMatch && emailValid && passwordValid) return true;\n  }\n\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={styles.loginpage}\n        >\n          <View style={styles.appView}>\n            <Text style={styles.title}>Green Pine Connects</Text>\n\n            <KeyboardAvoidingView behavior=\"padding\">\n              <Text style={styles.loginText}>Sign up</Text>\n\n              <Input\n                style={styles.input}\n                variant=\"underlined\"\n                size=\"2xl\"\n                mx=\"4\"\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={(email) => {\n                  setEmail(email.toLowerCase());\n                }}\n              ></Input>\n\n              <Input\n                secureTextEntry={show}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                value={password}\n                onChangeText={(password) => {\n                  setPassword(password);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow(!show);\n                    }}\n                  />\n                }\n                placeholder=\"Password\"\n              ></Input>\n\n              <Input\n                secureTextEntry={show2}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                value={password2}\n                onChangeText={(password2) => {\n                  setPassword2(password2);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show2 ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow2(!show2);\n                    }}\n                  />\n                }\n                placeholder=\"Retype password\"\n              ></Input>\n\n              <Center>\n                <Button\n                  bg=\"red.800\"\n                  w=\"190\"\n                  h=\"10\"\n                  borderRadius=\"20\"\n                  onPress={() => {\n                    if (validate()) {\n                      navigation.navigate(\"CreateAccount2\", {\n                        email: email,\n                        password: password,\n                      });\n                    }\n                  }}\n                >\n                  <Text style={styles.loginButton}>Confirm</Text>\n                </Button>\n              </Center>\n            </KeyboardAvoidingView>\n          </View>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n};\n\nexport default CreateAccount;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  loginButton: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","//Birthday input screen\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport {\n  NativeBaseProvider,\n  Input,\n  Button,\n  Icon,\n  Center,\n  Box,\n  useToast,\n} from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { store, retrieve } from \"../storage\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount2 = ({ route, navigation }) => {\n  let [show, setShow] = useState(true);\n  let [show2, setShow2] = useState(true);\n  const [birthday, setBirthday] = useState();\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const toast = useToast();\n\n  var dateOptions = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n\n  function validateBirthday() {\n    if (!birthday) return;\n    function getAge(date) {\n      var today = new Date();\n      var age = today.getFullYear() - date.getFullYear();\n      var m = today.getMonth() - date.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < date.getDate())) {\n        age--;\n      }\n      return age;\n    }\n\n    const id = \"toastID\";\n    if (getAge(birthday) < 18) {\n      if (!toast.isActive(id))\n        toast.show({\n          id,\n          description:\n            \"You need to be at least 18 years old to make an account.\",\n        });\n      return false;\n    } else return true;\n  }\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={styles.loginpage}\n        >\n          <View style={styles.appView}>\n            <Text style={styles.title}>Green Pine Connects</Text>\n\n            <KeyboardAvoidingView behavior=\"padding\">\n              <Center>\n                <Text style={styles.question}>What is your birthday?</Text>\n              </Center>\n              <TouchableWithoutFeedback\n                onPress={() => {\n                  setDatePickerVisibility(true);\n                }}\n              >\n                <View\n                  alignSelf=\"center\"\n                  bg=\"primary.500\"\n                  style={styles.bdayBox}\n                >\n                  <Center>\n                    <Text style={styles.bdayText}>\n                      {birthday\n                        ? birthday.toLocaleDateString(\"en-US\", dateOptions)\n                        : \"Choose your birthday\"}\n                    </Text>\n                  </Center>\n                </View>\n              </TouchableWithoutFeedback>\n\n              <DateTimePickerModal\n                isVisible={isDatePickerVisible}\n                mode=\"date\"\n                onConfirm={(date) => {\n                  setBirthday(date);\n                  setDatePickerVisibility(false);\n                }}\n                onCancel={() => {\n                  setDatePickerVisibility(false);\n                }}\n                isDarkModeEnabled={true}\n              />\n              <Center>\n                <Button\n                  bg=\"red.800\"\n                  w=\"230\"\n                  h=\"10\"\n                  borderRadius=\"20\"\n                  onPress={() => {\n                    if (validateBirthday())\n                      navigation.navigate(\"CreateAccount3\", {\n                        email: route.params.email,\n                        password: route.params.password,\n                        birthday: birthday.toLocaleDateString(\n                          \"en-US\",\n                          dateOptions\n                        ),\n                      });\n                  }}\n                >\n                  <Text style={styles.confirmTxt}>Confirm</Text>\n                </Button>\n              </Center>\n            </KeyboardAvoidingView>\n          </View>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n};\n\nexport default CreateAccount2;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  question: {\n    paddingTop: 40,\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  bdayBox: {\n    marginTop: 30,\n    height: 45,\n    width: 400,\n    backgroundColor: \"lightgrey\",\n    borderRadius: 12,\n    marginBottom: 80,\n  },\n  bdayText: {\n    fontSize: 35,\n  },\n  confirmTxt: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","//import AsyncStorage from '@react-native-community/async-storage';\nimport { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { store, retrieve } from \"../storage\";\nimport { auth, createUser } from \"../firebase\";\n\nconst textColor = \"#dae8d4c9\";\nconst CreateAccount3 = ({ route, navigation }) => {\n  let [firstName, setFirstName] = useState();\n  let [lastName, setLastName] = useState();\n  let [submitAccountStatus, setSubmitAccountStatus] = useState();\n\n  let userData = {\n    email: route.params.email,\n    firstName,\n    lastName,\n    birthday: route.params.birthday,\n    photo:\n      \"https://firebasestorage.googleapis.com/v0/b/greenpineconnects.appspot.com/o/def.png?alt=media&token=dfefab79-7b79-4988-8967-616a63ccdfec\",\n  };\n\n  return (\n    <NativeBaseProvider>\n      <LinearGradient\n        // Background Linear Gradient\n        colors={[\"#c4791c\", \"#0c5407\"]}\n        start={{ x: 1.75, y: 0.75 }}\n        end={{ x: 0.5, y: 0.98 }}\n        style={styles.loginpage}\n      >\n        <View style={styles.appView}>\n          <Text style={styles.title}>Green Pine Connects</Text>\n\n          <KeyboardAvoidingView behavior=\"padding\">\n            <Text style={styles.loginText}>Enter your name and surname</Text>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"First name\"\n              value={firstName}\n              onChangeText={(firstName) => {\n                setFirstName(firstName);\n              }}\n            ></Input>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"Last name\"\n              value={lastName}\n              onChangeText={(lastName) => {\n                setLastName(lastName);\n              }}\n            ></Input>\n\n            <Center>\n              <Button\n                style={styles.btn}\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                  console.log(route.params.email, route.params.password);\n                  createUser(\n                    route.params.email,\n                    route.params.password,\n                    userData\n                  ).then((r) => {\n                    if (!r) {\n                      setSubmitAccountStatus(\"Your account has been created.\");\n                      setTimeout(() => navigation.navigate(\"EditProfile\"), 750);\n                    }\n                    if (r === \"auth/email-already-in-use\") {\n                      setSubmitAccountStatus(\n                        \"The email address is already in use by another account\"\n                      );\n                    }\n                  });\n                  //navigation.navigate(\"CreateAccount2\");\n                }}\n              >\n                <Text style={styles.btnText}>Create Account</Text>\n              </Button>\n            </Center>\n            <Center>\n              <Text style={styles.submitStatus}>{submitAccountStatus}</Text>\n            </Center>\n          </KeyboardAvoidingView>\n        </View>\n      </LinearGradient>\n    </NativeBaseProvider>\n  );\n};\n\nexport default CreateAccount3;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  input: {\n    height: 60,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  btn: {\n    marginTop: 100,\n  },\n  btnText: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n  submitStatus: {\n    marginTop: 30,\n    fontFamily: \"Jost_600SemiBold\",\n    fontSize: 20,\n    marginHorizontal: 5,\n    textAlign: \"center\",\n    color: textColor,\n  },\n});\n","//import AsyncStorage from '@react-native-community/async-storage';\nimport { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst textColor = \"#dae8d4c9\";\nconst ForgotPassword = ({ navigation }) => {\n  let [recoveryEmail, setRecoveryEmail] = useState();\n\n  return (\n    <NativeBaseProvider>\n      <LinearGradient\n        // Background Linear Gradient\n        colors={[\"#c4791c\", \"#0c5407\"]}\n        start={{ x: 1.75, y: 0.75 }}\n        end={{ x: 0.5, y: 0.98 }}\n        style={styles.loginpage}\n      >\n        <View style={styles.appView}>\n          <Text style={styles.title}>Green Pine Connects</Text>\n\n          <KeyboardAvoidingView behavior=\"padding\">\n            <Text style={styles.loginText}>What is your account's email?</Text>\n\n            <Input\n              style={styles.input}\n              variant=\"underlined\"\n              size=\"2xl\"\n              mx=\"4\"\n              placeholder=\"Email\"\n              value={recoveryEmail}\n              onChangeText={(recoveryEmail) => {\n                setRecoveryEmail(recoveryEmail);\n              }}\n            ></Input>\n\n            <Center>\n              <Button\n                style={styles.btn}\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                    \n                  \n                }}\n              >\n                <Text style={styles.btnText}>Confirm</Text>\n              </Button>\n            </Center>\n          </KeyboardAvoidingView>\n        </View>\n      </LinearGradient>\n    </NativeBaseProvider>\n  );\n};\n\nexport default ForgotPassword;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginBottom: 150,\n    marginTop: 100,\n    color: textColor,\n  },\n  input: {\n    height: 60,\n  },\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n  btn: {\n    marginTop: 100,\n  },\n  btnText: {\n    color: textColor,\n    fontSize: 16,\n  },\n  appView: {\n    height: \"100%\",\n  },\n});\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Center,\n  View,\n  Image,\n  Avatar,\n  HStack,\n  VStack,\n} from \"native-base\";\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { auth, getUserDataByID, getChatData } from \"../firebase\";\nimport { set } from \"firebase/database\";\nimport {\n  useFonts,\n  LobsterTwo_700Bold_Italic,\n} from \"@expo-google-fonts/lobster-two\";\nimport { getGPC } from \"../global\";\nconst bkgColor = \"#ebecf0\";\n\nconst Chat = ({ navigation }) => {\n  const [myData, setMyData] = useState([]);\n  const [pageStatus, setPageStatus] = useState(\"loading\");\n  const [GPCl, setGPCl] = useState({});\n  let [fontsLoaded] = useFonts({\n    LobsterTwo_700Bold_Italic,\n  });\n\n  useEffect(() => {\n    setGPCl(getGPC());\n    getUserDataByID(auth.currentUser.uid).then((r) => {\n      if (!r.chats) {\n        setPageStatus(\"noData\");\n        return;\n      }\n      Object.keys(r.chats).forEach((convoKey) => {\n        console.log(\"CONVO\", convoKey);\n        getChatData(convoKey).then((chatData) => {\n          chatData = chatData.val();\n          Object.keys(chatData.members).forEach((member) => {\n            if (member === GPCl.usrData_id) return;\n            chatData.otherPerson = member;\n          });\n          getUserDataByID(chatData.otherPerson).then((theirData) => {\n            // join user and chat dimensions\n            setMyData((myData) => [\n              ...myData,\n              { ...chatData, ...theirData, convoKey },\n            ]);\n          });\n        });\n      });\n      setPageStatus(\"ready\");\n    });\n  }, []);\n\n  if (pageStatus === \"loading\") return <Text>Loading...</Text>;\n  if (pageStatus === \"noData\") {\n    if (!fontsLoaded) {\n      return (\n        <View>\n          <Text>Loading...</Text>\n        </View>\n      );\n    } else\n      return (\n        <>\n          <View style={styles.pageContainer}>\n            <Header />\n            <View flex={1} justifyContent=\"center\">\n              <Center>\n                <Text style={styles.noMessagesText}>No messages</Text>\n              </Center>\n            </View>\n          </View>\n          <Navbar navigation={navigation}></Navbar>\n        </>\n      );\n  }\n  if (pageStatus === \"ready\")\n    return (\n      <NativeBaseProvider>\n        <View style={styles.pageContainer}>\n          <Header />\n          {myData.map((convo) => {\n            return (\n              <TouchableWithoutFeedback\n                key={convo.otherPerson}\n                onPress={() =>\n                  navigation.navigate(\"Conversation\", {\n                    convo: convo.convoKey,\n                    chatteeImg: convo.photo,\n                  })\n                }\n              >\n                <HStack style={styles.slice} space={2}>\n                  <Avatar\n                    style={styles.chatteeImg}\n                    size=\"lg\"\n                    source={{\n                      uri: convo.photo,\n                    }}\n                  ></Avatar>\n                  <View>\n                    <VStack space={2}>\n                      <Text style={styles.from}>\n                        {convo.firstName} {convo.lastName}\n                      </Text>\n                      <Text style={styles.lastText}>{convo.lastMessage}</Text>\n                    </VStack>\n                  </View>\n                </HStack>\n              </TouchableWithoutFeedback>\n            );\n          })}\n        </View>\n        <Navbar navigation={navigation}></Navbar>\n      </NativeBaseProvider>\n    );\n};\n\nexport default Chat;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n\n  convserationSlice: {\n    view: {},\n  },\n  slice: {\n    marginLeft: 5,\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n  },\n  noMessagesText: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    fontSize: 28,\n    color: \"darkgreen\",\n  },\n  from: { fontWeight: \"bold\", fontSize: 17 },\n  lastText: { fontSize: 14 },\n});\n","import {\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Center,\n  View,\n  Fab,\n  Icon,\n  Modal,\n  FormControl,\n  Input,\n  Button,\n  Divider,\n  HStack,\n} from \"native-base\";\nimport { useState, useReducer } from \"react\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Page from \"../components/Page\";\nimport Header from \"../components/Header\";\nimport SocialCluster from \"../components/SocialCluster\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { newPost } from \"../firebase\";\nimport { getGPC } from \"../global\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Community = ({ navigation }) => {\n  const defaultState = {\n    eventName: \"\",\n    location: \"\",\n    eventTime: \"\",\n    details: \"\",\n  };\n  const [showModal, setShowModal] = useState(false);\n  const [postType, setPostType] = useState(\"socialPost\");\n  const [postData, setPostData] = useState();\n  const [refresh, setRefresh] = useState();\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  function reducer(state, action) {\n    state = {\n      ...state,\n      ...action.payload,\n    };\n    return state;\n  }\n\n  function handlePost() {\n    GPCl = getGPC();\n    //write socialPost\n    if (postType == \"socialPost\") {\n      newPost({\n        type: \"socialPost\",\n        body: postData,\n        user: GPCl.usrData_id,\n        comments: {},\n        commentCount: 0,\n      });\n      setPostData(\"\");\n      setRefresh(!refresh);\n      return;\n    }\n    //else, write event post\n    newPost({\n      type: \"event\",\n      user: GPCl.usrData_id,\n      comments: {},\n      commentCount: 0,\n      ...state,\n    });\n    setPostData(\"\");\n    return;\n  }\n  return (\n    <NativeBaseProvider>\n      <Page>\n        <Header style={styles.header}></Header>\n        <SocialCluster refresh={refresh}></SocialCluster>\n\n        <Modal\n          isOpen={showModal}\n          onClose={() => setShowModal(false)}\n          avoidKeyboard\n          justifyContent=\"flex-end\"\n          bottom=\"4\"\n          size=\"full\"\n          style={styles.modal}\n        >\n          <Modal.Content h=\"80%\">\n            <Modal.Header>\n              <Center>\n                <HStack>\n                  <View ml=\"10%\" mt={2}>\n                    <TouchableWithoutFeedback\n                      onPress={() => setPostType(\"socialPost\")}\n                    >\n                      <Text style={styles.selectorText}>Social Post</Text>\n                    </TouchableWithoutFeedback>\n                  </View>\n                  <Divider\n                    bg=\"grey\"\n                    thickness=\"2\"\n                    mx=\"2\"\n                    orientation=\"vertical\"\n                  />\n                  <View mt={2} mr={-8}>\n                    <TouchableWithoutFeedback\n                      onPress={() => setPostType(\"event\")}\n                    >\n                      <Text style={styles.selectorText}>Event</Text>\n                    </TouchableWithoutFeedback>\n                  </View>\n\n                  <Button\n                    ml=\"30%\"\n                    variant=\"ghost\"\n                    colorScheme=\"blueGray\"\n                    onPress={() => {\n                      setShowModal(false);\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    mr=\"10%\"\n                    bg=\"darkgreen\"\n                    onPress={() => {\n                      handlePost();\n                      setShowModal(false);\n                    }}\n                  >\n                    Post\n                  </Button>\n                </HStack>\n              </Center>\n            </Modal.Header>\n            <Modal.Body>\n              {postType == \"socialPost\" && (\n                <FormControl>\n                  <Input\n                    height={550}\n                    mt=\"3\"\n                    multiline\n                    placeholder=\"Share something\"\n                    value={postData}\n                    onChangeText={(postData) => {\n                      setPostData(postData);\n                    }}\n                  />\n                </FormControl>\n              )}\n              {postType == \"event\" && (\n                <FormControl>\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    multiline\n                    placeholder=\"Name of the event\"\n                    value={state.eventName}\n                    onChangeText={(eventName) =>\n                      dispatch({ payload: { eventName } })\n                    }\n                  />\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    placeholder=\"Location\"\n                    value={state.location}\n                    onChangeText={(location) =>\n                      dispatch({ payload: { location } })\n                    }\n                  />\n                  <Input\n                    height={35}\n                    mt=\"1\"\n                    placeholder=\"Time\"\n                    value={state.eventTime}\n                    onChangeText={(eventTime) =>\n                      dispatch({ payload: { eventTime } })\n                    }\n                  />\n                  <Input\n                    height={450}\n                    mt=\"1\"\n                    multiline\n                    placeholder=\"Details\"\n                    value={state.details}\n                    onChangeText={(details) =>\n                      dispatch({ payload: { details } })\n                    }\n                  />\n                </FormControl>\n              )}\n            </Modal.Body>\n\n            <Modal.Footer></Modal.Footer>\n          </Modal.Content>\n        </Modal>\n\n        <Fab\n          renderInPortal={false}\n          shadow={2}\n          size=\"sm\"\n          icon={<Icon color=\"white\" as={AntDesign} name=\"plus\" size=\"sm\" />}\n          bg=\"darkgreen\"\n          onPress={() => setShowModal(true)}\n        />\n      </Page>\n      <Navbar navigation={navigation} name=\"plus\" as={AntDesign}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Community;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n  },\n  selectorText: {\n    fontSize: \"21\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useContext } from \"react\";\nimport { DarkModeContext, DarkModeProvider } from \"../context/darkModeContext\";\n\nconst Page = ({ children }) => {\n  const darkMode = useContext(DarkModeContext);\n  return (\n    <View style={styles.page}>\n      <DarkModeProvider>{children}</DarkModeProvider>\n    </View>\n  );\n};\n\nexport default Page;\n\nconst styles = StyleSheet.create({\n  page: {\n    height: \"94%\",\n  },\n  dark: {},\n  light: {},\n});\n","import React, { createContext, useState } from \"react\";\nconst DarkModeContext = createContext();\n\nfunction DarkModeProvider(props) {\n  const [darkMode, setDarkMode] = useState(false);\n  function toggleDarkMode() {\n    setDarkMode(!darkMode);\n  }\n  return (\n    <DarkModeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n}\n\nexport { DarkModeContext, DarkModeProvider };\n","import { StyleSheet, Text, TouchableWithoutFeedback } from \"react-native\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Image, View, VStack, HStack, Actionsheet, ScrollView, Box } from \"native-base\";\nimport { getCollection, getUserDataByID } from \"../firebase\";\nimport { Entypo, FontAwesome5 } from \"@expo/vector-icons\";\nimport ExpandedPost from \"./ExpandedPost\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { getGPC } from \"../global\";\n\nconst profilePicSize = 50;\n\nconst SocialPost = (props) => {\n  const [actionsheetIsOpen, setActionSheetIsOpen] = useState(false);\n  function onActionsheetClose() {setActionSheetIsOpen(false)}\n  function onActionsheetOpen() {setActionSheetIsOpen(true)}\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  let GPCl = getGPC();\n  return (\n    <TouchableWithoutFeedback onPress={() => setShowCommentModal(true)}>\n      <View style={styles.postWrapper}>\n        {showCommentModal && (\n          <ExpandedPost props={props} showCommentModal={showCommentModal} setShowCommentModal={setShowCommentModal}></ExpandedPost>\n        )}\n        {props.type == \"socialPost\" && (\n          <View style={styles.socialPost}>\n            <HStack space={2}>\n              <Image style={styles.profilePic} source={{uri: props.picture}} alt=\"profile picture\" ></Image>\n              <VStack space={0.2} w=\"full\">\n                <View style={{ flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                  <Text style={styles.name}>{props.name}</Text>\n                  <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                    <Text style={styles.time}>\n                      {dayjs(props.time).fromNow(true) + \" ago\"}\n                    </Text>\n                    <TouchableWithoutFeedback onPress={onActionsheetOpen}>\n                      <Entypo name=\"dots-three-horizontal\" size={12} color=\"black\" style={{ marginTop: 3 }}/>\n                    </TouchableWithoutFeedback>\n                    <Actionsheet isOpen={actionsheetIsOpen} onClose={onActionsheetClose}>\n                      <Actionsheet.Content>\n                        <Box w=\"100%\" h={60} px={4} justifyContent=\"center\"></Box>\n                        {GPCl.usrData_id == props.user && (\n                          <TouchableWithoutFeedback onPress={() => {}}>\n                            <Actionsheet.Item>Delete post</Actionsheet.Item>\n                          </TouchableWithoutFeedback>\n                        )}\n                        <Actionsheet.Item>Cancel</Actionsheet.Item>\n                      </Actionsheet.Content>\n                    </Actionsheet>\n                  </View>\n                </View>\n                <View w=\"90%\">\n                  <Text style={styles.body}>{props.body}</Text>\n                </View>\n                <HStack mt=\"2\" space={1}>\n                  <View style={{ marginTop: 1.5 }}>\n                    <FontAwesome5 name=\"comment\" size={16} color=\"grey\" />\n                  </View>\n                  <Text style={{ color: \"grey\" }}>{props.commentCount}</Text>\n                </HStack>\n              </VStack>\n            </HStack>\n          </View>\n        )}\n\n        {props.type == \"event\" && (\n          <View style={styles.eventPost}>\n            <HStack space={2}>\n              <Image style={styles.profilePic} source={{ uri: props.picture }} alt=\"profile picture\"></Image>\n              <VStack space={0.2} w=\"full\">\n                <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }} >\n                  <Text style={styles.name}>{props.name}</Text>\n                  <View style={{ flexDirection: \"row\", marginRight: \"20%\" }}>\n                    <Text style={styles.time}>\n                      {dayjs(props.time).fromNow(true) + \" ago\"}\n                    </Text>\n                    <TouchableWithoutFeedback onPress={onActionsheetOpen}>\n                      <Entypo name=\"dots-three-horizontal\" size={12} color=\"black\" style={{ marginTop: 3 }}/>\n                    </TouchableWithoutFeedback>\n                    <Actionsheet isOpen={actionsheetIsOpen} onClose={onActionsheetClose}>\n                      <Actionsheet.Content>\n                        <Box w=\"100%\" h={60} px={4} justifyContent=\"center\" ></Box>\n                        {GPCl.usrData_id == props.user && (\n                          <TouchableWithoutFeedback onPress={() => {}}>\n                            <Actionsheet.Item>Delete post</Actionsheet.Item>\n                          </TouchableWithoutFeedback>\n                        )}\n                        <Actionsheet.Item>Cancel</Actionsheet.Item>\n                      </Actionsheet.Content>\n                    </Actionsheet>\n                  </View>\n                </View>\n                <VStack w=\"90%\">\n                  <View style={styles.eventDetails}>\n                    <Text style={[styles.eventTitle, styles.detailsText]}>\n                      {props.eventName}\n                    </Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.setDetails}>Time</Text>\n                    <Text style={styles.detailsText}>{props.eventTime}</Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.setDetails}>Location</Text>\n                    <Text style={styles.detailsText}>{props.location}</Text>\n                  </View>\n                  <View style={styles.eventDetails}>\n                    <Text style={styles.detailsText}>{props.body}</Text>\n                  </View>\n                </VStack>\n                <HStack mt=\"2\" space={1}>\n                  <View style={{ marginTop: 1.5 }}>\n                    <FontAwesome5 name=\"comment\" size={16} color=\"grey\" />\n                  </View>\n                  <Text style={{ color: \"grey\" }}>{props.commentCount}</Text>\n                </HStack>\n              </VStack>\n            </HStack>\n          </View>\n        )}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst SocialCluster = (props) => {\n  const [data, setData] = useState([]);\n  const [dataReady, setDataReady] = useState(false);\n  dayjs.extend(relativeTime);\n  useEffect(() => {\n    \n    //clear states for the 'pseudo-refresh'\n    setData([]);\n    setDataReady(false);\n\n    //join posts with user data\n    getCollection(\"posts\").then((colData) => {\n      colData.forEach(async (post) => {\n        const usrData = await getUserDataByID(post.user);\n        setData((data) => [...data,\n          {[post.id]: {...post,\n              firstName: usrData.firstName,\n              lastName: usrData.lastName,\n              picture: usrData.profilePicture,\n              id: post.id,\n          }},\n        ]);\n      });\n      setDataReady(true);\n    });\n  }, [props.refresh]);\n  if (!dataReady) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  } else {\n    return (\n      <ScrollView>\n        {Object.values(data).map((post) => {\n          post = Object.values(post)[0];\n          return (\n            <SocialPost\n              key={post.id}\n              id={post.id}\n              name={post.firstName + \" \" + post.lastName}\n              picture={post.picture}\n              body={post.body ? post.body : post.details}\n              time={post.time.toDate()}\n              type={post.type}\n              eventName={post.eventName}\n              eventTime={post.eventTime}\n              location={post.location}\n              commentCount={post.commentCount}\n              user={post.user}\n            ></SocialPost>\n          );\n        })}\n      </ScrollView>\n    );\n  }\n};\n\nexport default SocialCluster;\n\nconst styles = StyleSheet.create({\n  postWrapper: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n    marginLeft: 4,\n    paddingVertical: 10,\n  },\n  eventPost: {},\n  socialPost: {},\n  setDetails: { fontWeight: \"bold\" },\n  detailsText: { marginBottom: 6 },\n  eventDetails: {},\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  eventTitle: { fontSize: 22 },\n  time: { textAlign: \"right\", marginRight: 5 },\n});\n","import { StyleSheet, TouchableWithoutFeedback } from \"react-native\";\nimport {\n  Image, VStack, HStack, View, Text, Modal, Divider, Input,\n} from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { createComment } from \"../firebase\";\nimport { getGPC } from \"../global\";\nimport dayjs from \"dayjs\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Comments from \"../components/Comments\";\nconst profilePicSize = 50;\n\nconst ExpandedPost = (props) => {\n  const [newComment, setNewComment] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [GPCl, setGPCl] = useState({});\n  useEffect(() => setGPCl(getGPC()), []);\n  function postComment(newComment) {\n    if (!newComment.match(\"[^ ]\")) return;\n    createComment(props.props.id, newComment);\n    setNewComment(\"\");\n    setRefresh(!refresh);\n  }\n\n  return (\n    <Modal\n      isOpen={props.showCommentModal}\n      onClose={() => props.setShowCommentModal(false)}\n      size={\"full\"}\n      justifyContent=\"flex-start\"\n      style={styles.modal}\n    >\n      <Modal.Content>\n        <Modal.CloseButton />\n        <Modal.Header>\n          {props.props.type == \"socialPost\" ? \"Post\" : \"Event\"}\n        </Modal.Header>\n        <Modal.Body>\n          {props.props.type == \"socialPost\" && (\n            <View>\n              <HStack space={2}>\n                <Image style={styles.profilePic} source={{ uri: props.props.picture, }} alt=\"profile picture\" ></Image>\n                <VStack space={0.2} w=\"full\">\n                  <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                    <Text style={styles.name}>{props.props.name}</Text>\n                    <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                      <Text style={styles.time}> {dayjs(props.props.time).format(\"D MMM YYYY H:mm\")} </Text>\n                    </View>\n                  </View>\n                  <View w=\"90%\">\n                    <Text style={styles.body}>{props.props.body}</Text>\n                  </View>\n                </VStack>\n              </HStack>\n            </View>\n          )}\n          {props.type == \"event\" && (\n            <View style={styles.eventPost}>\n              <HStack space={2}>\n                <Image style={styles.profilePic} source={{ uri: props.props.picture, }} alt=\"profile picture\"></Image>\n                <VStack space={0.2} w=\"full\">\n                  <View style={{ flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                    <Text style={styles.name}>{props.props.name}</Text>\n                    <View style={{ flexDirection: \"row\", marginRight: \"20%\"}}>\n                      <Text style={styles.time}>{props.props.time}</Text>\n                    </View>\n                  </View>\n                  <VStack w=\"90%\">\n                    <View style={styles.eventDetails}>\n                      <Text style={[styles.eventTitle, styles.detailsText]}>\n                        {props.props.eventName}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.setDetails}>Time</Text>\n                      <Text style={styles.detailsText}>\n                        {props.props.eventTime}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.setDetails}>Location</Text>\n                      <Text style={styles.detailsText}>\n                        {props.props.location}\n                      </Text>\n                    </View>\n                    <View style={styles.eventDetails}>\n                      <Text style={styles.detailsText}>{props.props.body}</Text>\n                    </View>\n                  </VStack>\n                </VStack>\n              </HStack>{\" \"}\n            </View>\n          )}{\" \"}\n          <Divider mb={4} thickness=\"2\"></Divider>\n          <Comments postProps={{ ...props.props, refresh }}></Comments>\n        </Modal.Body>\n\n        <Modal.Footer></Modal.Footer>\n\n        <HStack space={1.5} ml={1}>\n          <Image style={styles.myCommPic} source={{ uri: GPCl.usrData_profilePicture}} alt=\"profile picture\"></Image>\n          <Input\n            placeholder=\"Add a comment\"\n            w=\"80%\"\n            variant=\"rounded\"\n            mb={1}\n            value={newComment}\n            onChangeText={(e) => { setNewComment(e); }}\n          ></Input>\n          <TouchableWithoutFeedback onPress={() => { postComment(newComment) }}>\n            <FontAwesome name=\"send-o\" size={18} color=\"gray\" style={{ paddingTop: 8 }}/>\n          </TouchableWithoutFeedback>\n        </HStack>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ExpandedPost;\n\nconst styles = StyleSheet.create({\n  postWrapper: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n    marginLeft: 4,\n    paddingVertical: 10,\n  },\n  modal: {\n    marginTop: \"10%\",\n    marginHorizontal: \"1%\",\n  },\n  comments: {\n    justifyContent: \"left\",\n  },\n  setDetails: { fontWeight: \"bold\" },\n  detailsText: { marginBottom: 6 },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  time: { textAlign: \"right\", marginRight: 5 },\n  myCommPic: {\n    width: 30,\n    height: 30,\n    borderRadius: 30 / 2.5,\n    borderColor: \"gray\",\n  },\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  eventTitle: { fontSize: 22 },\n});\n","import { StyleSheet, FlatList } from \"react-native\";\nimport { Image, VStack, HStack, View, Text, Divider } from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { getComments, getUserDataByID } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nconst profilePicSize = 50;\n\nconst Comments = (props) => {\n  const [dataReady, setDataReady] = useState(false);\n  const [data, setData] = useState([]);\n  let shortNo = Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\n  useEffect(() => {\n    //init for refresh mechanism\n    console.log(\"new effect\");\n    let comCount = 0;\n    setDataReady(false);\n    setData([]);\n    let results = [];\n    getComments(props.postProps.id).then((comments) => {\n      console.log(comments);\n      if (!comments || comments.length == 0) { setDataReady(\"noComments\"); return; }\n      comCount = comments.length;\n\n      comments.forEach((comment) => {\n        //join user data on comment objects\n\n        getUserDataByID(comment.from).then((usrData) => {\n          results.push({\n            photo: usrData.photo,\n            firstName: usrData.firstName,\n            lastName: usrData.lastName,\n            ...comment,\n          });\n\n          if (results.length == comCount) {\n            setData(results);\n            setDataReady(true);\n            return;\n          }\n        });\n      });\n    });\n  }, [props.postProps.refresh]); //on pseudorefresh side-effect\n\n  if (!dataReady) return <Text>Loading...</Text>;\n  if (dataReady == \"noComments\") return <Text>No comments</Text>;\n  if (dataReady && data)\n    return (\n      <FlatList data={data}\n        renderItem={(comment) => (\n          <View>\n            <HStack space={2} mb={2}>\n              <Image\n                style={styles.profilePic}\n                source={{ uri: comment.item.photo }}\n                alt=\"profile picture\"\n              ></Image>\n              <VStack space={0.2} w=\"full\">\n                <View\n                  style={{ flexDirection: \"row\", justifyContent: \"space-between\", }}\n                >\n                  <Text style={styles.name}>\n                    {comment.item.firstName + \" \" + comment.item.lastName}\n                  </Text>\n                  <View\n                    style={{ flexDirection: \"row\", marginRight: \"20%\" }}\n                  >\n                    <Text style={styles.time}>\n                      {dayjs(comment.item.time.toDate()).fromNow(true) + \" ago\"}\n                    </Text>\n                    <Entypo\n                      name=\"dots-three-horizontal\"\n                      size={12}\n                      color=\"black\"\n                      style={{ marginTop: 3 }}\n                    />\n                  </View>\n                </View>\n                <View w=\"90%\">\n                  <Text style={styles.body}>{comment.item.body}</Text>\n                </View>\n              </VStack>\n            </HStack>\n            <Divider mb={2}></Divider>\n          </View>\n        )}\n      />\n    );\n};\n\nexport default Comments;\n\nconst styles = StyleSheet.create({\n  comment: { marginLeft: -15, marginRight: -5, paddingBottom: -150 },\n  profilePic: {\n    width: profilePicSize,\n    height: profilePicSize,\n    borderRadius: profilePicSize / 2.5,\n    borderColor: \"gray\",\n  },\n  name: { fontWeight: \"bold\", fontSize: 15 },\n  time: { textAlign: \"right\", marginRight: 5 },\n});\n","import { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport { NativeBaseProvider, Center, Avatar, HStack, Input } from \"native-base\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { retrieve } from \"../storage\";\nimport { getGPC } from \"../global\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { newRealtimeMessage, getRealtimeMessages } from \"../firebase\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Conversation = ({ navigation, route }) => {\n  const convo = route.params.convo;\n  let chatteePic = route.params.chatteeImg;\n  const [myData, setMyData] = useState();\n  const [myPic, setMyPic] = useState();\n  const [message, setMessage] = useState();\n  const [GPCl, setGPCl] = useState({});\n\n  function sendMessage(message) {\n    if (!message.match(\"[^ ]\")) return;\n    newRealtimeMessage({ body: message }, convo);\n    setMessage(\"\");\n  }\n\n  useEffect(() => {\n    setGPCl(getGPC());\n    if (GPCl[\"usrData_profilePicture\"])\n      setMyPic(GPCl[\"usrData_profilePicture\"]);\n    getRealtimeMessages(convo, setMyData);\n  }, []);\n\n  if (!myData) {\n    return <Text>Loading...</Text>;\n  } else\n    return (\n      <NativeBaseProvider>\n        <KeyboardAvoidingView behavior=\"padding\">\n          <View style={styles.pageContainer}>\n            <Header />\n\n            {Object.keys(myData).map((messageKey) => {\n              myData[messageKey].pic = chatteePic;\n\n              return (\n                <View key={messageKey}>\n                  <HStack\n                    space={2}\n                    style={[\n                      myData[messageKey].from === auth.currentUser.uid\n                        ? styles.myMsgStack\n                        : styles.otherMsgStack,\n                      styles.chatHStack,\n                    ]}\n                  >\n                    <Avatar\n                      style={styles.chatteeImg}\n                      size=\"sm\"\n                      display={\n                        myData[messageKey].from === auth.currentUser.uid\n                          ? \"none\"\n                          : \"\"\n                      }\n                      source={{\n                        uri: myData[messageKey].pic,\n                      }}\n                    ></Avatar>\n                    <View style={styles.messageBox}>\n                      <Text style={styles.messageText}>\n                        {myData[messageKey].body}\n                      </Text>\n                    </View>\n                  </HStack>\n                </View>\n              );\n            })}\n          </View>\n          <HStack style={{ marginVertical: 10 }}>\n            <Input\n              style={styles.input}\n              variant=\"rounded\"\n              backgroundColor={bkgColor}\n              w=\"85%\"\n              marginLeft={3}\n              value={message}\n              onChangeText={(e) => {\n                setMessage(e);\n              }}\n            ></Input>\n            <TouchableWithoutFeedback\n              onPress={() => {\n                sendMessage(message);\n              }}\n            >\n              <FontAwesome\n                name=\"send-o\"\n                size={18}\n                color=\"gray\"\n                style={{\n                  paddingTop: 8,\n                  paddingLeft: 10,\n                }}\n              />\n            </TouchableWithoutFeedback>\n          </HStack>\n\n          <Navbar navigation={navigation}></Navbar>\n        </KeyboardAvoidingView>\n      </NativeBaseProvider>\n    );\n};\n\nexport default Conversation;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"87%\",\n    backgroundColor: bkgColor,\n  },\n  chatteeImg: {\n    marginVertical: 10,\n  },\n  chatHStack: {\n    marginHorizontal: 4,\n  },\n  myMsgStack: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginRight: 10,\n  },\n  otherMsgStack: { justifyContent: \"flex\", alignItems: \"flex\", marginLeft: 10 },\n  messageBox: {\n    backgroundColor: \"#a2c794\",\n    borderRadius: 8,\n    flex: 0.75,\n    height: \"auto\",\n    marginTop: 8,\n  },\n  messageText: { marginHorizontal: 12, paddingVertical: 10 },\n  input: {},\n});\n","import { StyleSheet, Text } from \"react-native\";\nimport { NativeBaseProvider, Center, View, Button } from \"native-base\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport { auth } from \"../firebase\";\n\nconst bkgColor = \"#ebecf0\";\n\nconst Settings = ({ navigation }) => {\n  return (\n    <NativeBaseProvider>\n      <View style={styles.pageContainer}>\n        <Header />\n        <Center>\n          {\" \"}\n          <Button\n            style={styles.logoutBtn}\n            w=\"80%\"\n            variant=\"outline\"\n            onPress={() => {\n              auth\n                .signOut()\n                .then(() => {\n                  console.log(\"user successfuly signed out\");\n                  navigation.navigate(\"LoginScreen\");\n                })\n                .catch(function (error) {\n                  console.log(\"sign-out error\", error);\n                });\n            }}\n          >\n            Log out\n          </Button>\n        </Center>\n      </View>\n      <Navbar navigation={navigation}></Navbar>\n    </NativeBaseProvider>\n  );\n};\n\nexport default Settings;\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    height: \"94%\",\n    backgroundColor: bkgColor,\n  },\n  logout: {},\n});\n","import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport EditProfile from \"./screens/EditProfile\";\nimport Cards from \"./screens/Cards\";\nimport { NativeBaseProvider } from \"native-base\";\nimport CreateAccount from \"./screens/CreateAccount\";\nimport CreateAccount2 from \"./screens/CreateAccount2\";\nimport CreateAccount3 from \"./screens/CreateAccount3\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Chat from \"./screens/Chat\";\nimport Community from \"./screens/Community\";\nimport Navbar from \"./components/Navbar\";\nimport Conversation from \"./screens/Conversation\";\nimport Settings from \"./screens/Settings\";\nimport {LogBox} from 'react-native';\n\nconst Stack = createNativeStackNavigator();\nLogBox.ignoreAllLogs();\n\nexport default function App() {\n  return (\n    <NativeBaseProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n        \n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"LoginScreen\"\n            component={LoginScreen}\n          /><Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Settings\"\n            component={Settings}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Chat\"\n            component={Chat}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Cards\"\n            component={Cards}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Conversation\"\n            component={Conversation}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"EditProfile\"\n            component={EditProfile}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Community\"\n            component={Community}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"Navbar\"\n            component={Navbar}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount\"\n            component={CreateAccount}\n          />\n          \n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount2\"\n            component={CreateAccount2}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"ForgotPassword\"\n            component={ForgotPassword}\n          />\n          <Stack.Screen\n            options={{ headerShown: false }}\n            name=\"CreateAccount3\"\n            component={CreateAccount3}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </NativeBaseProvider>\n  );\n}\n\nconst styles = StyleSheet.create({});\n","import { Platform } from \"react-native\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport {\n  getFirestore, collection, getDocs, doc, setDoc, orderBy, where, query, updateDoc, getDoc, limit,\n} from \"firebase/firestore\";\nimport {//blob storage\n  uploadString, getStorage, ref, getDownloadURL,\n} from \"firebase/storage\";\nimport {\n  getDatabase, set, ref as storageRef, update as updateRealtime, onValue, get as realtimeGet, query as realtimeQuery,\n} from \"firebase/database\"; //realtimeDB\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"@firebase/auth\";\nimport \"@firebase/firestore\";\nimport { appendGPC, setGPC } from \"./global\";\nimport \"react-native-get-random-values\";\nimport { v4 as uuidv4, validate } from \"uuid\";\nimport {\n  API_KEY,\n  AUTH_DOMAIN,\n  DATABASE_URL,\n  PROJECT_ID,\n  STORAGE_BUCKET,\n  MESSAGING_SENDER_ID,\n  APP_ID,\n  MEASUREMENT_ID,\n  BUNDLE_ID\n} from \"@env\";\n\nconst firebaseConfig = {\n  apiKey: API_KEY,\n  authDomain: AUTH_DOMAIN,\n  databaseURL: DATABASE_URL,\n  projectId: PROJECT_ID,\n  storageBucket: STORAGE_BUCKET,\n  messagingSenderId: MESSAGING_SENDER_ID,\n  appId: APP_ID,\n  measurementId: MEASUREMENT_ID,\n  bundleId:BUNDLE_ID\n};\n\nlet app;\nif (firebase.apps.length === 0) app = firebase.initializeApp(firebaseConfig);\nelse app = firebase.app();\n\nconst auth = firebase.auth();\n/////////////////////User creation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nasync function createUser(email, password, userData) {\n  const response = await createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(\"User creation successful\");\n      writeUserDataAtCreation(userData);\n      return 0;\n    })\n    .catch((error) => {\n      console.log(\"User creation error\", error.code);\n      return error.code;\n    });\n  Object.keys(userData).forEach((key) => {\n    appendGPC({ [\"usrData_\" + key]: userData[key] }); //temp assignment to global until async server is complete\n  });\n  return response;\n}\n\n/////////////////////////Firestore DB\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst firestoreDb = getFirestore();\nconst usersRef = collection(firestoreDb, \"users\");\n\nasync function writeUserDataAtCreation(userData) {\n  try {\n    validate;\n    appendUserData(userData);\n    storePicture(\n      \"https://firebasestorage.googleapis.com/v0/b/greenpineconnects.appspot.com/o/def.png?alt=media&token=dfefab79-7b79-4988-8967-616a63ccdfec\"\n    );\n  } catch (error) {console.log(\"DB write error\", error);}\n}\n\nexport async function getUserData() {\n  let data = [];\n  const querySnapshot = await getDocs(usersRef);\n  querySnapshot.forEach((doc) => {data.push({ ...doc.data(), ...{ id: doc.id } });});\n  return data;\n}\n\nexport async function getUserDataByID(id) {\n  console.log(\"getting usr data for\", id);\n  try {\n    const docRef = doc(firestoreDb, \"users\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) return docSnap.data();\n    else {\n      console.log(`The document matching the requested ID of ${id} was not found.`);\n      return 0;\n    }\n  } catch (error) {console.log(\"GetUserDataByID error\", error);}\n}\n\nasync function commentCount(postID, func) {\n  const commentRef = doc(firestoreDb, \"posts\", postID);\n  const increment = func == \"add\" ? 1 : -1;\n  await updateDoc(commentRef, {commentCount: firebase.firestore.FieldValue.increment(increment)});\n}\n\nexport async function createComment(postID, comment) {\n  try {\n    const commentRef = doc(firestoreDb, \"comments\", postID);\n    let newId = uuidv4();\n    await setDoc(\n      commentRef,\n      {[newId]: {\n          body: comment,\n          from: auth.currentUser.uid,\n          id: newId,\n          time: firebase.firestore.Timestamp.fromDate(new Date())},\n      },{ merge: true }\n    );\n    commentCount(postID, \"add\");\n    console.log(\"written new comment!\");\n  } catch (e) {console.log(\"writeComment error\", e);}\n}\n\nasync function changeProfilePic(newURL) {\n  try {\n    const ppicRef = doc(firestoreDb, \"users\", auth.currentUser.uid);\n    await updateDoc(ppicRef, {photo: newURL});\n  } catch (e) {console.log(\"changeProfilePic error\", error);}\n}\n\n//////////////////////Profile picture storage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nlet blobDb = getStorage();\n\nexport async function storePicture(uri) {\n  try {\n    Platform.OS === \"ios\" ? uri.replace(\"file://\", \"\") : uri;\n    const storageRef = ref(blobDb, auth.currentUser.uid);\n    uploadString(storageRef, uri, \"data_url\").then((snapshot) => {\n      console.log(\"Profile picture stored!\");\n      appendGPC({ usrData_image: uri });\n      getDownloadURL(snapshot.ref).then((downloadURL) => {changeProfilePic(downloadURL);});\n    });\n  } catch (error) {console.log(\"error storePicture \", error);}\n}\n\nexport async function getPictureOfUser(uid) {\n  //not working well, may be deprecated\n  blobDb = getStorage();\n  const rf = ref(blobDb, uid);\n  const res = await getDownloadURL(rf)\n    .then((pic) => {return pic})\n    .catch((error) => {\n      console.log(\"getPictureOfUser, getDownloadURL error: (codes on internet)\",error);\n      return;\n    });\n  return res;\n}\n///////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nasync function getAndGlobalizeUsrData() {\n  //called on login: gets data of logged user\n  const q = query(\n    collection(firestoreDb, \"users\"),\n    where(\"email\", \"==\", auth.currentUser.email)\n  );\n  const snap = await getDocs(q);\n  let response = new Object(),\n  newGPC = {};\n  snap.forEach((doc) => {response = doc.data();});\n  (function writeToGPC() {\n    for (key of Object.keys(response)) {\n      if (key === \"chats\") continue;\n      newGPC[\"usrData_\" + String(key)] = response[key];\n      console.log(\"stored in GPC \", \"usrData_\" + String(key), response[key]);\n    }\n  })();\n  newGPC[\"usrData_id\"] = auth.currentUser.uid;\n  setGPC(newGPC);\n  return response;\n}\n\nasync function appendUserData(userData) {\n  //deletes null values from object\n  Object.keys(userData).forEach((k) => userData[k] == null && delete userData[k]);\n  try {\n    const ref = doc(firestoreDb, \"users\", auth.currentUser.uid);\n    setDoc(ref, userData, { merge: true });\n  } catch (error) {console.log(\"DB write error\", error)}\n}\n\nexport async function newPost(data) {\n  console.log(data);\n  try {\n    const docRef = doc(firestoreDb, \"posts\", uuidv4());\n    setDoc(\n      docRef,\n      { ...data, time: firebase.firestore.Timestamp.fromDate(new Date()) },\n      { merge: true }\n    );\n    console.log(\"new post written\");\n  } catch (error) {console.log(\"newPost error\", error);}\n}\n\nexport async function writeToDB(collection, data) {\n  //may be deprecated\n  try {\n    const docRef = doc(firestoreDb, collection, auth.currentUser.uid);\n    updateDoc(docRef, data);\n  } catch (error) {console.log(\"writeToDB error\", error);}\n}\n\nexport async function getCollection(col) {\n  try {\n    const postsRef = collection(firestoreDb, col);\n    const q = query(postsRef, orderBy(\"time\", \"desc\"), limit(20));\n    const snap = await getDocs(q);\n    let response = [];\n    snap.forEach((el) => response.push({ ...el.data(), id: el.id }));\n    response = response.sort((a, b) =>a.time.seconds < b.time.seconds ? 1 : -1);\n    return response;\n  } catch (error) {console.log(\"getAllCollection error\", error);}\n}\n\nexport async function getComments(postID) {\n  try {\n    const commentsRef = collection(firestoreDb, \"comments\");\n    const postRef = doc(commentsRef, postID);\n    const snap = await getDoc(postRef);\n    let response = [];\n    if (!snap.data()) {\n      console.log(\"no Comments\");\n      return;\n    }\n    Object.values(snap.data()).forEach((el) =>response.push({ ...el, id: el.id }));\n    response = response.sort((a, b) =>a.time.seconds < b.time.seconds ? 1 : -1);\n    return response;\n  } catch (error) {console.log(\"getComments error\", error)}\n}\n///////////////////Firebase realtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nconst realtimeDb = getDatabase();\n\nexport function createNewConvo(withPerson) {}\n\nexport async function getChatData(convoID) {\n  const chatsRef = storageRef(realtimeDb, \"chats/\" + convoID);\n  const q = realtimeQuery(chatsRef);\n  return await realtimeGet(q, (snapshot) => {return snapshot});\n}\n\nexport function newRealtimeMessage(data, convoID) {\n  try {\n    updateRealtime(\n      storageRef(realtimeDb, \"messages/\" + convoID + \"/\" + uuidv4()),\n      {\n        //make new uuid for message, write data inside it. add timestamp and uid\n        ...data,\n        ...{ time: firebase.firestore.Timestamp.fromDate(new Date()) },\n        ...{ from: auth.currentUser.uid },\n      });\n    updateLastMessage(data.body, convoID);\n  } catch (error) { console.log(\"realtimeWrite error\", error);}\n}\n\nexport function updateLastMessage(message, convoID) {\n  let updates = {};\n  updates[\"/chats/\" + convoID + \"/lastMessage\"] = message;\n  try { updateRealtime(storageRef(realtimeDb), updates);\n  } catch (error) {console.log(\"updateLastMessage error\", error);}\n}\n\nexport function getRealtimeMessages(convoID, setMyData) {\n  const messagesRef = storageRef(realtimeDb, \"messages/\" + convoID);\n  console.log(\"getting convo\", convoID, messagesRef);\n  const q = realtimeQuery(messagesRef);\n  onValue(q, (snapshot) => {\n    let data = [];\n    snapshot.forEach((child) => {data.push(child.val());});\n    //incoming realtime messages handled here\n    console.log(\"existing messages:\", data);\n    data = data.sort((a, b) => (a.time.seconds > b.time.seconds ? 1 : -1));\n    setMyData(data);\n  });\n}\n\nexport function swipeRight(swipedRightOn) {\n  getRightSwipes(auth.currentUser.uid).then((mySwipes) => {\n    mySwipes = mySwipes.val();\n    appendGPC({ [\"usrData_\" + \"swipedRightOn\"]: Object.keys(mySwipes) });\n    console.log(\"my swipes\", mySwipes);\n    console.log(\"adding right swipe data on: \", swipedRightOn);\n    let obj = {};\n    obj[swipedRightOn] = \"true\";\n    try {\n      set(\n        storageRef(realtimeDb,\"swipes/\" + auth.currentUser.uid + \"/swipedRightOn\"),{...mySwipes,...obj,}\n      );\n    } catch (error) { console.log(\"swipeRight DB error\", error)}\n  });\n  matchCheck(swipedRightOn);\n}\n\nexport async function getRightSwipes(ofPerson) {\n  const rightSwipesRef = storageRef(realtimeDb, \"swipes/\" + ofPerson + \"/swipedRightOn\");\n  return await realtimeGet(rightSwipesRef);\n}\n\nexport function matchCheck(withPerson) {\n  getRightSwipes(withPerson).then((theirSwipes) => {\n    if (!theirSwipes.val()) return;\n    if (Object.keys(theirSwipes.val()).includes(auth.currentUser.uid)) console.log(\"match\")\n    else console.log(\"no match\");\n  });\n}\n//////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nexport { auth, createUser, getAndGlobalizeUsrData, appendUserData };\n","import {\n  auth,\n  createUser,\n  getAndGlobalizeUsrData,\n  writeToDB,\n  checkAuth,\n  getPictureOfUser,\n} from \"../firebase\";\nimport { store, retrieve } from \"../storage\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { NativeBaseProvider, Input, Button, Icon, Center } from \"native-base\";\nimport { useFonts, Jost_600SemiBold } from \"@expo-google-fonts/jost\";\nimport { LobsterTwo_700Bold_Italic } from \"@expo-google-fonts/lobster-two\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as Application from \"expo-application\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst textColor = \"#dae8d4c9\";\n\nconst LoginScreen = ({ navigation }) => {\n  //---------//TESTING AREA//-----------\\\\\n\n  //------------------------------------//\n  //hooks\n  useEffect(() => {\n    console.log(\"App starting\");\n    AsyncStorage.clear();\n    //auto-login with session\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        handleLogin();\n      } else {\n        console.log(\"user not signed in\");\n      }\n    });\n  }, []);\n\n  let [show, setShow] = useState(true);\n  let [email, setEmail] = useState();\n  let [password, setPassword] = useState();\n\n  const handleSignUp = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"registered with\", user.email);\n      })\n      .catch((error) => {\n        console.log(\"badSignup: \", error.message);\n        alert(\"Invalid signup\");\n      });\n  };\n\n  function handleLogin() {\n    getAndGlobalizeUsrData().then(() => {\n      navigation.navigate(\"Cards\");\n    });\n  }\n\n  async function handleLogInWithEmailAndPassword() {\n    await auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"logged in with\", user.email);\n        handleLogin();\n      })\n      .catch((error) => {\n        console.log(\"badLogin: \", error.message);\n        alert(\"Invalid login\");\n      });\n  }\n\n  let [fontsLoaded] = useFonts({\n    Jost_600SemiBold,\n    LobsterTwo_700Bold_Italic,\n  });\n\n  if (!fontsLoaded) {\n    return (\n      <View style={styles.LoadingContainer}>\n        <ActivityIndicator color=\"#0c5407\" />\n      </View>\n    );\n  } else {\n    return (\n      <NativeBaseProvider>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={[\"#c4791c\", \"#0c5407\"]}\n          start={{ x: 1.75, y: 0.75 }}\n          end={{ x: 0.5, y: 0.98 }}\n          style={styles.loginpage}\n        >\n          <Text style={styles.title}>Green Pine Connects</Text>\n          <Text style={styles.subtitle1}>\n            A global application to increase resources for Film and TV\n            professionals{\" \"}\n          </Text>\n          <Text style={styles.subtitle2}>By the Green Pine Foundation</Text>\n          <KeyboardAvoidingView behavior=\"padding\">\n            <View>\n              <Text style={styles.loginText}>Log in</Text>\n              <Input\n                style={styles.input}\n                variant=\"underlined\"\n                size=\"2xl\"\n                mx=\"4\"\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={(email) => {\n                  setEmail(email.toLowerCase());\n                }}\n              ></Input>\n              <Input\n                secureTextEntry={show}\n                variant=\"underlined\"\n                style={styles.input}\n                mx=\"4\"\n                marginTop=\"5\"\n                marginBottom=\"4\"\n                size=\"2xl\"\n                defaultValue={password}\n                onChangeText={(password) => {\n                  setPassword(password);\n                }}\n                InputRightElement={\n                  <Icon\n                    as={\n                      <MaterialIcons\n                        name={show ? \"visibility-off\" : \"visibility\"}\n                      />\n                    }\n                    size={5}\n                    mr=\"2\"\n                    color=\"muted.400\"\n                    onPress={() => {\n                      setShow(!show);\n                    }}\n                  />\n                }\n                placeholder=\"Password\"\n              ></Input>\n              <Text\n                style={styles.forgotPass}\n                onPress={() => navigation.navigate(\"ForgotPassword\")}\n              >\n                Forgot password?\n              </Text>\n            </View>\n\n            <Center>\n              <Button\n                bg=\"red.800\"\n                w=\"190\"\n                h=\"10\"\n                borderRadius=\"20\"\n                onPress={() => {\n                  if (email && password) {\n                    handleLogInWithEmailAndPassword();\n                  }\n                }}\n              >\n                <Text style={styles.loginButton}>Log in</Text>\n              </Button>\n            </Center>\n\n            <View style={styles.lineContainer}>\n              <View style={styles.line} />\n              <Text style={styles.lineText}>or</Text>\n              <View style={styles.line} />\n            </View>\n\n            <Center>\n              <Button\n                startIcon={\n                  <FontAwesome\n                    style={styles.loginWithGoogleIcon}\n                    name=\"apple\"\n                    size={18}\n                    color=\"white\"\n                  />\n                }\n                style={styles.loginWithAppleButton}\n                bg=\"black\"\n                w=\"240\"\n                h=\"10\"\n                borderRadius=\"20\"\n              >\n                <Text style={styles.loginWithAppleText}>Log in with Apple</Text>\n              </Button>\n            </Center>\n\n            <Center>\n              <Button\n                title=\"Google Sign-In\"\n                startIcon={\n                  <FontAwesome\n                    style={styles.loginWithGoogleIcon}\n                    name=\"google\"\n                    size={18}\n                  />\n                }\n                style={styles.loginWithGoogleButton}\n                bg=\"white\"\n                w=\"240\"\n                h=\"10\"\n                marginTop=\"3\"\n                borderRadius=\"20\"\n                onPress={() =>\n                  onGoogleButtonPress().then(() =>\n                    console.log(\"Signed in with Google!\")\n                  )\n                }\n              >\n                <Text style={styles.loginWithGoogleText}>\n                  Log in with Google\n                </Text>\n              </Button>\n            </Center>\n\n            <View>\n              <Center>\n                <Text style={styles.newHere}>\n                  New here?{\" \"}\n                  <Text\n                    style={styles.createAccountText}\n                    onPress={() => navigation.navigate(\"CreateAccount\")}\n                  >\n                    Create an account\n                  </Text>\n                </Text>\n              </Center>\n            </View>\n          </KeyboardAvoidingView>\n        </LinearGradient>\n      </NativeBaseProvider>\n    );\n  }\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  LoadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n\n  loginpage: {\n    flex: 1,\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n  },\n\n  title: {\n    fontFamily: \"LobsterTwo_700Bold_Italic\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 39,\n    marginTop: 75,\n    color: textColor,\n  },\n  subtitle1: {\n    fontFamily: \"Jost_600SemiBold\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 16,\n    color: textColor,\n    marginHorizontal: 5,\n    marginTop: 35,\n    marginBottom: 15,\n  },\n  subtitle2: {\n    fontFamily: \"Jost_600SemiBold\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignContent: \"center\",\n    fontSize: 14,\n    color: textColor,\n    marginHorizontal: 5,\n    marginBottom: 100,\n  },\n\n  loginText: {\n    fontFamily: \"Jost_600SemiBold\",\n    color: textColor,\n    fontSize: 27,\n    textAlign: \"left\",\n    marginBottom: 25,\n    paddingLeft: 15,\n  },\n\n  input: {\n    fontSize: 17,\n    color: textColor,\n  },\n\n  forgotPass: {\n    color: textColor,\n    textDecorationLine: \"underline\",\n    textAlign: \"right\",\n    marginRight: 15,\n    marginBottom: 30,\n  },\n\n  loginButton: {\n    color: textColor,\n    fontSize: 16,\n  },\n\n  lineContainer: {\n    marginVertical: 15,\n    flexDirection: \"row\",\n  },\n\n  line: {\n    backgroundColor: textColor,\n    height: 1,\n    flex: 1,\n    alignSelf: \"center\",\n  },\n\n  lineText: {\n    color: textColor,\n    alignSelf: \"center\",\n    paddingHorizontal: 5,\n    fontSize: 14,\n  },\n\n  loginWithAppleButton: {},\n\n  loginWithAppleText: {\n    color: textColor,\n    fontSize: 16,\n  },\n\n  loginWithGoogleIcon: { marginTop: 2 },\n  loginWithGoogleText: {\n    color: \"black\",\n    fontSize: 16,\n  },\n\n  newHere: {\n    marginTop: 3,\n    marginBottom: -50,\n    color: textColor,\n    fontSize: 13,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n\n  createAccountText: {\n    textDecorationLine: \"underline\",\n  },\n});\n","var GPC = {};\nexport function setGPC(newgpc) {\n  GPC = newgpc;\n  console.log(\"set\", GPC);\n}\nexport function getGPC() {\n  return GPC;\n}\nexport function appendGPC(data) {\n  GPC = { ...GPC, ...data };\n}\n"],"sourceRoot":""}